<Type Name="SelectScalarExpression" FullName="Microsoft.SqlServer.TransactSql.ScriptDom.SelectScalarExpression">
  <TypeSignature Language="C#" Value="public class SelectScalarExpression : Microsoft.SqlServer.TransactSql.ScriptDom.SelectElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SelectScalarExpression extends Microsoft.SqlServer.TransactSql.ScriptDom.SelectElement" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.TransactSql.ScriptDom.SelectScalarExpression" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.TransactSql.ScriptDom</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SqlServer.TransactSql.ScriptDom.SelectElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Das Column-Element, das direkt nach dem select-Schlüsselwort verwendet wird.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SelectScalarExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.TransactSql.ScriptDom.SelectScalarExpression.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragmentVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragmentVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.TransactSql.ScriptDom.SelectScalarExpression.Accept(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragmentVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragmentVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>
            Akzeptiert Besucher
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChildren">
      <MemberSignature Language="C#" Value="public override void AcceptChildren (Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragmentVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AcceptChildren(class Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragmentVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.TransactSql.ScriptDom.SelectScalarExpression.AcceptChildren(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragmentVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragmentVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>
            Akzeptiert Besucher für untergeordnete Elemente
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.TransactSql.ScriptDom.IdentifierOrValueExpression ColumnName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SqlServer.TransactSql.ScriptDom.IdentifierOrValueExpression ColumnName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.TransactSql.ScriptDom.SelectScalarExpression.ColumnName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.TransactSql.ScriptDom.IdentifierOrValueExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Dies kann ein Bezeichner oder ein Literal vom Typ AsciiStringLiteral oder UnicodeStringLiteral sein. Optional, kann NULL sein.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.TransactSql.ScriptDom.ScalarExpression Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SqlServer.TransactSql.ScriptDom.ScalarExpression Expression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.TransactSql.ScriptDom.SelectScalarExpression.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.TransactSql.ScriptDom.ScalarExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            
            Ein select-Ausdruck kann einen beliebigen Ausdruck aus, wenn dies nicht Null ist, dann ist dieser select-Ausdruck ein regulärer Ausdruck derzeit diese AST-Klasse einen Ausdruck oder einen Platzhalter drückt. Da eine SelectExpressions wesentlich tun kann, wollen wir wechseln zu einem Ansatz Ableitung, in denen diese Klasse ist eine Basisklasse oder möglicherweise eine andere elegantere Herangehensweise. Die ist zunächst ein Grundentwurf zur Unterstützung von SELECT * FROM foo.
            
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
