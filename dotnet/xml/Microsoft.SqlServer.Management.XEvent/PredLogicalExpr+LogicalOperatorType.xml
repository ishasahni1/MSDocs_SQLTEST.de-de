<Type Name="PredLogicalExpr+LogicalOperatorType" FullName="Microsoft.SqlServer.Management.XEvent.PredLogicalExpr+LogicalOperatorType">
  <TypeSignature Language="C#" Value="public enum PredLogicalExpr.LogicalOperatorType" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed PredLogicalExpr/LogicalOperatorType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Management.XEvent.PredLogicalExpr.LogicalOperatorType" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.Management.XEvent</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            Definieren Sie in PredLogicalExpr logischen Operator, der verwendet werden k√∂nnen
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="And" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Management.XEvent.PredLogicalExpr/LogicalOperatorType And = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Management.XEvent.PredLogicalExpr.LogicalOperatorType.And" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.XEvent.PredLogicalExpr+LogicalOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Logisches und
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="Not" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Management.XEvent.PredLogicalExpr/LogicalOperatorType Not = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Management.XEvent.PredLogicalExpr.LogicalOperatorType.Not" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.XEvent.PredLogicalExpr+LogicalOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Not
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="Or" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Management.XEvent.PredLogicalExpr/LogicalOperatorType Or = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Management.XEvent.PredLogicalExpr.LogicalOperatorType.Or" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.XEvent.PredLogicalExpr+LogicalOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Logisches oder
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>
