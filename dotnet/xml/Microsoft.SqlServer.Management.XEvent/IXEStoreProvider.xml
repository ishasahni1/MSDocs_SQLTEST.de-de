<Type Name="IXEStoreProvider" FullName="Microsoft.SqlServer.Management.XEvent.IXEStoreProvider">
  <TypeSignature Language="C#" Value="public interface IXEStoreProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXEStoreProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Management.XEvent.IXEStoreProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.Management.XEvent</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
              definiert die Schnittstelle, die Komponentenanbieter benötigen, für den XEStore implementieren, die der Stamm für alle Metadatenklassen und Laufzeitklassen ist.
            </summary>
    <remarks>Muss hinzugefügt werden.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DomainInstanceName">
      <MemberSignature Language="C#" Value="public string DomainInstanceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DomainInstanceName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Management.XEvent.IXEStoreProvider.DomainInstanceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft den Namen der Domäneninstanz ab.
            </summary>
        <value>Der Name der Domäneninstanz.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IComparer&lt;string&gt; GetComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IComparer`1&lt;string&gt; GetComparer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.XEvent.IXEStoreProvider.GetComparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IComparer&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Ruft die Vergleichsfunktion für die untergeordneten Sammlungen
            </summary>
        <returns>Muss hinzugefügt werden.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnection">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Management.Common.ISfcConnection GetConnection (Microsoft.SqlServer.Management.Sdk.Sfc.SfcObjectQueryMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.SqlServer.Management.Common.ISfcConnection GetConnection(valuetype Microsoft.SqlServer.Management.Sdk.Sfc.SfcObjectQueryMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.XEvent.IXEStoreProvider.GetConnection(Microsoft.SqlServer.Management.Sdk.Sfc.SfcObjectQueryMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Common.ISfcConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Microsoft.SqlServer.Management.Sdk.Sfc.SfcObjectQueryMode" />
      </Parameters>
      <Docs>
        <param name="mode">
        </param>
        <summary>
            Ruft die aktuelle Verbindung für die Abfrage auf.
Gibt eine Verbindung zurück, die je nach Anforderung entweder eine einzelne serielle Abfrage oder mehrere gleichzeitig geöffnete Abfragen unterstützt
            </summary>
        <returns>Die zu verwendende Verbindung, oder NULL, um den Cachemodus zu verwenden Im Cachemodus werden Verbindungsprobleme und Probleme mit dem Öffnen des Datenlesers vermieden.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExecutionEngine">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Management.Sdk.Sfc.ISfcExecutionEngine GetExecutionEngine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.SqlServer.Management.Sdk.Sfc.ISfcExecutionEngine GetExecutionEngine() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.XEvent.IXEStoreProvider.GetExecutionEngine" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Sdk.Sfc.ISfcExecutionEngine</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Ruft das Ausführungsmodul ab.
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
