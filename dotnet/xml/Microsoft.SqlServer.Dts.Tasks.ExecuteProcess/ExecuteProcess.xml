<Type Name="ExecuteProcess" FullName="Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess">
  <TypeSignature Language="C#" Value="public sealed class ExecuteProcess : Microsoft.SqlServer.Dts.Runtime.Task, Microsoft.SqlServer.Dts.Runtime.IDTSComponentPersist, Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.IDTSExecuteProcess" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExecuteProcess extends Microsoft.SqlServer.Dts.Runtime.Task implements class Microsoft.SqlServer.Dts.Runtime.IDTSComponentPersist, class Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.IDTSExecuteProcess" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.ExecProcTask</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SqlServer.Dts.Runtime.Task</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.SqlServer.Dts.Runtime.IDTSComponentPersist</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.IDTSExecuteProcess</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.SqlServer.Dts.Runtime.DtsTask(HelpKeyword="sql13.dts.designer.executeprocesstask.F1", LocalizationType=typeof(Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.Localized), SamplesTag="SsisExecuteProcessTask", TaskContact="Execute Process Task;Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1", TaskType="DTS90", UITypeName="Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcessUI, Microsoft.SqlServer.ExecProcTaskUI, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("A2C0866D-F470-45DC-B742-FB4C3ADE88FE")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Führt eine Anwendung oder eine Batchdatei als Teil eines Paketworkflows aus. Diese Klasse kann nicht vererbt werden.
            </summary>
    <remarks>Muss hinzugefügt werden.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExecuteProcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Muss hinzugefügt werden.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public string Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Arguments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft Befehlszeilenargumente ab oder legt sie fest. Die Zeichenfolge kann mehrere, durch ein Leerzeichen getrennte Argumente enthalten.
            </summary>
        <value>Eine Zeichenfolge, die das Befehlszeilenargument bzw. zusätzliche Argumente enthält.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Executable">
      <MemberSignature Language="C#" Value="public string Executable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Executable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.Executable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft ab oder legt den Namen der Microsoft Win32 ausführbare Datei oder Batchdatei ausführen, wenn das Paket ausgeführt wird.
            </summary>
        <value>Eine Zeichenfolge, die den Namen der ausführbaren Microsoft Win32-Datei oder Batchdatei enthält ausführen, wenn das Paket ausgeführt wird.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override Microsoft.SqlServer.Dts.Runtime.DTSExecResult Execute (Microsoft.SqlServer.Dts.Runtime.Connections connections, Microsoft.SqlServer.Dts.Runtime.VariableDispenser variableDispenser, Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents events, Microsoft.SqlServer.Dts.Runtime.IDTSLogging log, object transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Microsoft.SqlServer.Dts.Runtime.DTSExecResult Execute(class Microsoft.SqlServer.Dts.Runtime.Connections connections, class Microsoft.SqlServer.Dts.Runtime.VariableDispenser variableDispenser, class Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents events, class Microsoft.SqlServer.Dts.Runtime.IDTSLogging log, object transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.Execute(Microsoft.SqlServer.Dts.Runtime.Connections,Microsoft.SqlServer.Dts.Runtime.VariableDispenser,Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents,Microsoft.SqlServer.Dts.Runtime.IDTSLogging,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.DTSExecResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connections" Type="Microsoft.SqlServer.Dts.Runtime.Connections" />
        <Parameter Name="variableDispenser" Type="Microsoft.SqlServer.Dts.Runtime.VariableDispenser" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents" />
        <Parameter Name="log" Type="Microsoft.SqlServer.Dts.Runtime.IDTSLogging" />
        <Parameter Name="transaction" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="connections">Eine Auflistung der vom Task verwendeten Verbindungen.</param>
        <param name="variableDispenser">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.VariableDispenser" /> Objekt zum Sperren von Variablen.</param>
        <param name="events">Ein Objekt, durch die <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents" /> Schnittstelle.</param>
        <param name="log">Ein Objekt, durch die <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSLogging" /> Schnittstelle.</param>
        <param name="transaction">Das Transaktionsobjekt, dem der Container angehört. Dieser Wert kann NULL sein.</param>
        <summary>
            Führt den Task aus.
            </summary>
        <returns>Ein Wert aus der <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSExecResult" /> Enumeration.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionValue">
      <MemberSignature Language="C#" Value="public override object ExecutionValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ExecutionValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.ExecutionValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gibt ein benutzerdefiniertes Objekt zurück. Diese Eigenschaft ist schreibgeschützt.
            </summary>
        <value>Ein benutzerdefiniertes Objekt.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FailTaskIfReturnCodeIsNotSuccessValue">
      <MemberSignature Language="C#" Value="public bool FailTaskIfReturnCodeIsNotSuccessValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FailTaskIfReturnCodeIsNotSuccessValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.FailTaskIfReturnCodeIsNotSuccessValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft ab oder legt einen booleschen Wert ab, der angibt, ob der Task fehlschlägt, wenn der Prozessexitcode von dem Wert im angegebenen unterscheidet <see cref="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.SuccessValue" />.
            </summary>
        <value>"true", wenn der Task fehlschlägt, wenn der Prozessexitcode von dem Wert im angegebenen unterscheidet <see cref="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.SuccessValue" />; false, wenn der Vorgang fortgesetzt, unabhängig von der ein Konflikt zwischen dem Prozess-Fehlercode wird und die <see cref="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.SuccessValue" /> Eigenschaft.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeTask">
      <MemberSignature Language="C#" Value="public override void InitializeTask (Microsoft.SqlServer.Dts.Runtime.Connections connections, Microsoft.SqlServer.Dts.Runtime.VariableDispenser variableDispenser, Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents events, Microsoft.SqlServer.Dts.Runtime.IDTSLogging log, Microsoft.SqlServer.Dts.Runtime.EventInfos eventInfos, Microsoft.SqlServer.Dts.Runtime.LogEntryInfos logEntryInfos, Microsoft.SqlServer.Dts.Runtime.ObjectReferenceTracker refTracker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeTask(class Microsoft.SqlServer.Dts.Runtime.Connections connections, class Microsoft.SqlServer.Dts.Runtime.VariableDispenser variableDispenser, class Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents events, class Microsoft.SqlServer.Dts.Runtime.IDTSLogging log, class Microsoft.SqlServer.Dts.Runtime.EventInfos eventInfos, class Microsoft.SqlServer.Dts.Runtime.LogEntryInfos logEntryInfos, class Microsoft.SqlServer.Dts.Runtime.ObjectReferenceTracker refTracker) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.InitializeTask(Microsoft.SqlServer.Dts.Runtime.Connections,Microsoft.SqlServer.Dts.Runtime.VariableDispenser,Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents,Microsoft.SqlServer.Dts.Runtime.IDTSLogging,Microsoft.SqlServer.Dts.Runtime.EventInfos,Microsoft.SqlServer.Dts.Runtime.LogEntryInfos,Microsoft.SqlServer.Dts.Runtime.ObjectReferenceTracker)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connections" Type="Microsoft.SqlServer.Dts.Runtime.Connections" />
        <Parameter Name="variableDispenser" Type="Microsoft.SqlServer.Dts.Runtime.VariableDispenser" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents" />
        <Parameter Name="log" Type="Microsoft.SqlServer.Dts.Runtime.IDTSLogging" />
        <Parameter Name="eventInfos" Type="Microsoft.SqlServer.Dts.Runtime.EventInfos" />
        <Parameter Name="logEntryInfos" Type="Microsoft.SqlServer.Dts.Runtime.LogEntryInfos" />
        <Parameter Name="refTracker" Type="Microsoft.SqlServer.Dts.Runtime.ObjectReferenceTracker" />
      </Parameters>
      <Docs>
        <param name="connections">Eine Auflistung der vom Task verwendeten Verbindungen.</param>
        <param name="variableDispenser">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.VariableDispenser" /> Objekt zum Sperren von Variablen.</param>
        <param name="events">Ein Objekt, durch die <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents" /> Schnittstelle.</param>
        <param name="log">Ein Objekt, durch die <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSLogging" /> Schnittstelle.</param>
        <param name="eventInfos">Eine Auflistung mit Ereignissen, die während der Ausführung des Tasks ausgelöst werden.</param>
        <param name="logEntryInfos">Eine Auflistung von Protokolleinträgen.</param>
        <param name="refTracker">Eine Objektverweisnachverfolgung.</param>
        <summary>
            Initialisiert die dem Task zugeordneten Eigenschaften. Diese Methode wird von der Laufzeit aufgerufen und wird nicht in Code verwendet.
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromXML">
      <MemberSignature Language="C#" Value="public void LoadFromXML (System.Xml.XmlElement rootNode, Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadFromXML(class System.Xml.XmlElement rootNode, class Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.LoadFromXML(System.Xml.XmlElement,Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootNode" Type="System.Xml.XmlElement" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents" />
      </Parameters>
      <Docs>
        <param name="rootNode">Der Knoten, der das Objekt enthält, das geladen und beibehalten werden soll.</param>
        <param name="events">Ein Objekt, implementiert die <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents" /> Schnittstelle zum Auslösen von Ereignissen (Fehlern, Warnungen usw.) während der Persistenz.</param>
        <summary>
            Diese Methode kann durch den Anwendungscode nicht aufgerufen werden. Um ein im XML-Format gespeichertes Paket zu laden, verwenden die <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.LoadPackage(System.String,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)" /> Methode.
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireFullFileName">
      <MemberSignature Language="C#" Value="public bool RequireFullFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireFullFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.RequireFullFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft ab oder legt einen booleschen Wert ab, der angibt, ob der vollständige Name und Erweiterung des Tasks erforderlich sind.
            </summary>
        <value>"true", wenn der vollständige Name und Erweiterung des Tasks erforderlich sind. Wenn auf True festgelegt, der Task fehlschlagen soll, wenn der vollständige Dateiname für die ausführbare Datei nicht gefunden werden kann. Der Standardwert ist true.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveToXML">
      <MemberSignature Language="C#" Value="public void SaveToXML (System.Xml.XmlDocument doc, Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveToXML(class System.Xml.XmlDocument doc, class Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.SaveToXML(System.Xml.XmlDocument,Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="doc" Type="System.Xml.XmlDocument" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents" />
      </Parameters>
      <Docs>
        <param name="doc">Das XML-Dokument, in dem die Informationen gespeichert werden sollen.</param>
        <param name="events">Ein Objekt, implementiert die <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents" /> Schnittstelle zum Auslösen von Ereignissen (Fehlern, Warnungen usw.) während der Persistenz.</param>
        <summary>
            Diese Methode kann durch den Anwendungscode nicht aufgerufen werden. Um ein Paket als XML-Datei zu speichern, verwenden die <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.SaveToXml(System.String,Microsoft.SqlServer.Dts.Runtime.Package,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)" /> Methode.
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorVariable">
      <MemberSignature Language="C#" Value="public string StandardErrorVariable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardErrorVariable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.StandardErrorVariable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft den Namen der Variablen ab, mit deren Hilfe die Fehlerausgabe des auszuführenden Prozesses erfasst wird, oder legt ihn fest.
            </summary>
        <value>Eine Zeichenfolge mit dem Namen der Variablen verwendet, um die Fehlerausgabe des auszuführenden Prozesses erfasst wird.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardInputVariable">
      <MemberSignature Language="C#" Value="public string StandardInputVariable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardInputVariable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.StandardInputVariable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft den Namen der Variablen ab, die als Eingabe für den auszuführenden Prozess verwendet wird, oder legt ihn fest.
            </summary>
        <value>Eine Zeichenfolge, die mit dem Namen der Variablen, die als Eingabe an den Prozess verwendet werden, ausgeführt werden soll.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputVariable">
      <MemberSignature Language="C#" Value="public string StandardOutputVariable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardOutputVariable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.StandardOutputVariable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft den Namen der Variablen ab, mit deren Hilfe die Ausgabe des auszuführenden Prozesses erfasst wird, oder legt ihn fest.
            </summary>
        <value>Eine Zeichenfolge mit dem Namen der Variablen verwendet, um die Ausgabe des auszuführenden Prozesses erfasst wird.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuccessValue">
      <MemberSignature Language="C#" Value="public int SuccessValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SuccessValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.SuccessValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft den Wert ab, der bei einer erfolgreichen Ausführung von der ausführbaren Datei oder Batchdatei zurückgegebenen wird, oder legt ihn fest.
            </summary>
        <value>Eine ganze Zahl, die von der ausführbaren Datei oder Batchdatei, die erfolgreiche Ausführung steht zurückgegebenen Wert enthält. Standardmäßig ist dieser Wert auf 0 festgelegt.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateProcessAfterTimeOut">
      <MemberSignature Language="C#" Value="public bool TerminateProcessAfterTimeOut { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TerminateProcessAfterTimeOut" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.TerminateProcessAfterTimeOut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft ab oder legt einen booleschen Wert ab, der angibt, ob der Prozess erzwungen wird, nach dem Timeoutzeitraum gemäß der <see cref="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.TimeOut" /> Eigenschaft.
            </summary>
        <value>"true", wenn der Prozess erzwungen wird, nach dem Timeoutzeitraum gemäß der <see cref="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.TimeOut" /> Eigenschaft. "false", wenn der Prozess zum Ausführen unabhängig vom Timeoutzeitraum fortgesetzt werden kann.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeOut">
      <MemberSignature Language="C#" Value="public int TimeOut { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TimeOut" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.TimeOut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft die Dauer in Sekunden ab, die der Task für die Prozessausführung vorsieht, oder legt sie fest.
            </summary>
        <value>Eine ganze Zahl, die die Anzahl der Sekunden angibt, die der Task für die prozessausführung vorsieht. Der Wert 0 (null) bedeutet, dass kein Timeoutwert verwendet und der Prozess so lange ausgeführt wird, bis er abgeschlossen ist oder bis ein Fehler auftritt.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override Microsoft.SqlServer.Dts.Runtime.DTSExecResult Validate (Microsoft.SqlServer.Dts.Runtime.Connections connections, Microsoft.SqlServer.Dts.Runtime.VariableDispenser variableDispenser, Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents events, Microsoft.SqlServer.Dts.Runtime.IDTSLogging log);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Microsoft.SqlServer.Dts.Runtime.DTSExecResult Validate(class Microsoft.SqlServer.Dts.Runtime.Connections connections, class Microsoft.SqlServer.Dts.Runtime.VariableDispenser variableDispenser, class Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents events, class Microsoft.SqlServer.Dts.Runtime.IDTSLogging log) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.Validate(Microsoft.SqlServer.Dts.Runtime.Connections,Microsoft.SqlServer.Dts.Runtime.VariableDispenser,Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents,Microsoft.SqlServer.Dts.Runtime.IDTSLogging)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.DTSExecResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connections" Type="Microsoft.SqlServer.Dts.Runtime.Connections" />
        <Parameter Name="variableDispenser" Type="Microsoft.SqlServer.Dts.Runtime.VariableDispenser" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents" />
        <Parameter Name="log" Type="Microsoft.SqlServer.Dts.Runtime.IDTSLogging" />
      </Parameters>
      <Docs>
        <param name="connections">Eine Auflistung der vom Task verwendeten Verbindungen.</param>
        <param name="variableDispenser">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.VariableDispenser" /> Objekt zum Sperren von Variablen.</param>
        <param name="events">Ein Objekt, implementiert die <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents" /> Schnittstelle.</param>
        <param name="log">Ein Objekt, implementiert die <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSLogging" /> Schnittstelle.</param>
        <summary>
            Überprüft, ob die Komponente ordnungsgemäß konfiguriert ist.
            </summary>
        <returns>Ein Wert aus der <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSExecResult" /> Enumeration.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ProcessWindowStyle WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.ProcessWindowStyle WindowStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ProcessWindowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft die Fensteranordnung ab, in der der Prozess ausgeführt wird, oder legt sie fest.
            </summary>
        <value>Ein ProcessWindowStyle-Enumerationswert, der angibt, wie das Fenster wird angezeigt, wenn der Prozess ausgeführt wird. Gültige Werte sind Normal, maximiert, minimiert oder ausgeblendet. Weitere Informationen finden Sie unter ProcessWindowStyle-Enumeration in der .NET Framework-Klassenbibliothek.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkingDirectory">
      <MemberSignature Language="C#" Value="public string WorkingDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkingDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.WorkingDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft das Verzeichnis ab, in dem die in der <see cref="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.Arguments" />-Eigenschaft angegebenen Dateien enthalten sind, oder legt es fest.
            </summary>
        <value>Eine Zeichenfolge, die das Verzeichnis enthält, in dem die Dateien, in angegeben, der <see cref="P:Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess.Arguments" /> Eigenschaft gefunden werden kann.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
