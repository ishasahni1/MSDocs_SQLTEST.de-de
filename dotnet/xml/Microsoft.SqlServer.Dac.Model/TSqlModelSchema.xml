<Type Name="TSqlModelSchema" FullName="Microsoft.SqlServer.Dac.Model.TSqlModelSchema">
  <TypeSignature Language="C#" Value="public sealed class TSqlModelSchema" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TSqlModelSchema extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Dac.Model.TSqlModelSchema" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.Dac.Extensions</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Definiert ein Schema für ein relationales TSQL-Datenbankmodell.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.SqlServer.Dac.Model.ModelTypeClass&gt; AllTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.SqlServer.Dac.Model.ModelTypeClass&gt; AllTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dac.Model.TSqlModelSchema.AllTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.SqlServer.Dac.Model.ModelTypeClass&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Alle unterstützten Typen im Modell. Dazu gehören Typen können nicht abgefragt werden, für die Verwendung der <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.GetObject(Microsoft.SqlServer.Dac.Model.ModelTypeClass,Microsoft.SqlServer.Dac.Model.ObjectIdentifier,Microsoft.SqlServer.Dac.Model.DacQueryScopes)" /> und <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.GetObjects(Microsoft.SqlServer.Dac.Model.DacQueryScopes,Microsoft.SqlServer.Dac.Model.ModelTypeClass[])" /> API-Aufrufe.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLevelTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.SqlServer.Dac.Model.ModelTypeClass&gt; TopLevelTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.SqlServer.Dac.Model.ModelTypeClass&gt; TopLevelTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dac.Model.TSqlModelSchema.TopLevelTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.SqlServer.Dac.Model.ModelTypeClass&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Alle auf oberster Ebene unterstützten Typen im Modell. Dies sind die einzigen Typen, die für über abgefragt werden, können die <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.GetObject(Microsoft.SqlServer.Dac.Model.ModelTypeClass,Microsoft.SqlServer.Dac.Model.ObjectIdentifier,Microsoft.SqlServer.Dac.Model.DacQueryScopes)" /> und <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.GetObjects(Microsoft.SqlServer.Dac.Model.DacQueryScopes,Microsoft.SqlServer.Dac.Model.ModelTypeClass[])" /> API-Aufrufe.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
