<Type Name="ModelExtractOptions" FullName="Microsoft.SqlServer.Dac.Model.ModelExtractOptions">
  <TypeSignature Language="C#" Value="public sealed class ModelExtractOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ModelExtractOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Dac.Model.ModelExtractOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.Dac.Extensions</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Definiert Optionen, die das Verhalten beim Laden eines Modells aus einer Datenbank auswirken.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ModelExtractOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Erstellt eine neue Instanz der dem <see cref="T:Microsoft.SqlServer.Dac.Model.ModelExtractOptions" /> Klasse.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractApplicationScopedObjectsOnly">
      <MemberSignature Language="C#" Value="public bool ExtractApplicationScopedObjectsOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtractApplicationScopedObjectsOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.ExtractApplicationScopedObjectsOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Rufen Sie einen booleschen Wert ab, der den Bereich der aus der Quelle extrahierten Objekte angibt, oder legen Sie ihn fest.
            </summary>
        <value>
            "True", wenn nur die Objekte im Bereich der Anwendung extrahiert werden sollen. Andernfalls "false", um alle Objekttypen zu extrahieren.
Der Standardwert ist true.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractReferencedServerScopedElements">
      <MemberSignature Language="C#" Value="public bool ExtractReferencedServerScopedElements { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtractReferencedServerScopedElements" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.ExtractReferencedServerScopedElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Rufen Sie einen booleschen Wert ab oder legen Sie ihn fest, um anzugeben, ob von der Quelle referenzierte serverbezogene Element extrahiert werden sollen.
            </summary>
        <value>
            "True", wenn Verweise auf serverbezogene Elemente extrahiert werden sollen. Andernfalls "false".
Der Standardwert ist true.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractUsageProperties">
      <MemberSignature Language="C#" Value="public bool ExtractUsageProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtractUsageProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.ExtractUsageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Einsatzeigenschaften enthalten Table.RowCount, Table.IndexSize, Table.DataSize, Table.UsedPages und Table.DataPages.
Bei "true", werden diese Eigenschaften werden aus der Datenbank extrahiert und im Modell verf√ºgbar sind.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreExtendedProperties">
      <MemberSignature Language="C#" Value="public bool IgnoreExtendedProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.IgnoreExtendedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft einen booleschen Wert ab, der angibt, ob erweiterte Eigenschaften ignoriert werden sollen, oder legt diesen fest.
            </summary>
        <value>
            "True", wenn erweiterte Eigenschaften ignoriert werden, andernfalls "false".
Der Standardwert ist "false".
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnorePermissions">
      <MemberSignature Language="C#" Value="public bool IgnorePermissions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnorePermissions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.IgnorePermissions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft einen booleschen Wert ab, der angibt, ob Berechtigungen ignoriert werden sollen, oder legt diesen fest.
            </summary>
        <value>
            "True", wenn die Berechtigungen ignoriert werden, andernfalls "false".
Der Standardwert ist true.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreUserLoginMappings">
      <MemberSignature Language="C#" Value="public bool IgnoreUserLoginMappings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreUserLoginMappings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.IgnoreUserLoginMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gibt mit einem booleschen Wert an, ob die Zuordnungen zwischen Benutzern und Anmeldenamen aus der Datenquelle extrahiert werden sollen.
            </summary>
        <value>
            "True", wenn die Benutzer-/Anmeldezuordnungen ignoriert werden sollen; andernfalls "false".
Der Standardwert ist "false".
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadAsScriptBackedModel">
      <MemberSignature Language="C#" Value="public bool LoadAsScriptBackedModel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadAsScriptBackedModel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.LoadAsScriptBackedModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Das Modell geladen werden sollen, sodass Objekte durch Ihre skriptgesteuerten Darstellungen gesichert werden? In diesem Fall Objekte in der <see cref="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.UserDefined" /> Bereich weist einen Datenquellennamen und quellpositionsinformationen. 
            
            When loading from a Dacpac or any other non-scripted source the model will not have source information. This
            means that when running static code analysis using the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService" /> some rules may not work 
            correctly, and that existing objects in the model could not be replaced using the 
            <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.AddOrUpdateObjects(System.String,System.String,Microsoft.SqlServer.Dac.Model.TSqlObjectOptions)" /> method since there
            is no script with their original definition. For scenarios that use the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService" /> setting this
            to true is strongly recommended. Similarly if you wish to update existing objects in the model setting this to true may
            be useful.
            
            Note that there is a potentially significant performance cost involved in creating a scripted model. All 
            top level objects in the <see cref="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.UserDefined" /> scope will be scripted out as strings 
            and then replaced with their scripted representations, after which the model will then have to fully resolve all 
            relationships. This will cause a one-time performance hit at the time the model is loaded. 
            </summary>
        <value>To be added.</value>
        <remarks>Standardwert ist "false", da Leistung Erstellung ein Skript gest√ºtztes Modell aus einer nicht skriptgesteuerten Quelle</remarks>
      </Docs>
    </Member>
    <Member MemberName="Storage">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dac.DacSchemaModelStorageType Storage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Dac.DacSchemaModelStorageType Storage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.Storage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dac.DacSchemaModelStorageType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft den Typ des Hintergrundspeichers ab, der w√§hrend der Extraktion f√ºr das Schemamodell verwendet wird.
            </summary>
        <value>
            Aufz√§hlungswert f√ºr den Typ des Hintergrundspeichers, der w√§hrend der Extraktion f√ºr das Schemamodell verwendet wird.
Der Standardwert ist "File".
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyExtraction">
      <MemberSignature Language="C#" Value="public bool VerifyExtraction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VerifyExtraction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.VerifyExtraction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Rufen Sie einen booleschen Wert ab, der angibt, ob das extrahierte Paket √ºberpr√ºft werden soll, oder legt diesen fest.
            </summary>
        <value>
            "True", wenn das Paket √ºberpr√ºft werden soll, andernfalls "false".
Der Standardwert ist "false".
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
