<Type Name="ExpressionNode" FullName="Microsoft.SqlServer.Management.Dmf.ExpressionNode">
  <TypeSignature Language="C#" Value="public abstract class ExpressionNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionNode extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.Dmf</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Basisklasse für die Knoten, kann nicht instanziiert werden
            </summary>
    <remarks>Muss hinzugefügt werden.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionNode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Muss hinzugefügt werden.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructNode">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Management.Dmf.ExpressionNode ConstructNode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.SqlServer.Management.Dmf.ExpressionNode ConstructNode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ConstructNode(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SqlServer.Diagnostics.STrace.STraceConfiguration(SkipAutoTrace=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Dmf.ExpressionNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
        </param>
        <summary />
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromFilterNode">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Management.Dmf.ExpressionNode ConvertFromFilterNode (Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode filterNode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.SqlServer.Management.Dmf.ExpressionNode ConvertFromFilterNode(class Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode filterNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ConvertFromFilterNode(Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Dmf.ExpressionNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterNode" Type="Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode" />
      </Parameters>
      <Docs>
        <param name="filterNode">
        </param>
        <summary />
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromFilterNode">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Management.Dmf.ExpressionNode ConvertFromFilterNode (Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode filterNode, Type facet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.SqlServer.Management.Dmf.ExpressionNode ConvertFromFilterNode(class Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode filterNode, class System.Type facet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ConvertFromFilterNode(Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Dmf.ExpressionNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterNode" Type="Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode" />
        <Parameter Name="facet" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="filterNode">
        </param>
        <param name="facet">
        </param>
        <summary />
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="protected static object ConvertFromString (string stringObjType, string stringValue);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object ConvertFromString(string stringObjType, string stringValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ConvertFromString(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringObjType" Type="System.String" />
        <Parameter Name="stringValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringObjType">
        </param>
        <param name="stringValue">
        </param>
        <summary>
            Konvertiert die Zeichenfolge, die ein Objekt des angegebenen Typs. Typ muss unterstützt werden. UnsupportedTypeException andernfalls ausgelöst.
FormatException abfängt und TypeConversionException auslöst.
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
        <exception cref="T:Microsoft.SqlServer.Management.Dmf.TypeConversionException" />
        <exception cref="T:Microsoft.SqlServer.Management.Dmf.UnsupportedTypeException" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToFilterNode">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode ConvertToFilterNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode ConvertToFilterNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ConvertToFilterNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary />
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToIntWithCheck">
      <MemberSignature Language="C#" Value="protected static int ConvertToIntWithCheck (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig int32 ConvertToIntWithCheck(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ConvertToIntWithCheck(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
        </param>
        <summary>
            Konvertiert die Zeichenfolge, ganze Zahl. FormatException abfängt und TypeConversionException auslöst.
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
        <exception cref="T:Microsoft.SqlServer.Management.Dmf.TypeConversionException" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="protected static string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ConvertToString(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SqlServer.Diagnostics.STrace.STraceConfiguration(SkipAutoTrace=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
        </param>
        <summary>
            Konvertiert ein Objekt in seine Zeichenfolgendarstellung, die von ConvertFromString verständlich
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepClone">
      <MemberSignature Language="C#" Value="public virtual Microsoft.SqlServer.Management.Dmf.ExpressionNode DeepClone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.SqlServer.Management.Dmf.ExpressionNode DeepClone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.DeepClone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SqlServer.Diagnostics.STrace.STraceConfiguration(SkipAutoTrace=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Dmf.ExpressionNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Erstellt einen tiefen Klon des aktuellen literaler an.
Die Bewertungsergebnisse werden durch einen Verweis, nicht nach Wert kopiert.
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Management.Dmf.ExpressionNode Deserialize (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.SqlServer.Management.Dmf.ExpressionNode Deserialize(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Deserialize(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Dmf.ExpressionNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
        </param>
        <summary>
            Deserialisierung aus einer Zeichenfolge – XmlReader erstellt und ruft die tatsächliche Deserialisierungsprogramm
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Management.Dmf.ExpressionNode Deserialize (System.Xml.XmlReader xr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.SqlServer.Management.Dmf.ExpressionNode Deserialize(class System.Xml.XmlReader xr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Deserialize(System.Xml.XmlReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Dmf.ExpressionNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xr" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xr">XmlReader - müssen Leerzeichen ignorieren</param>
        <summary>
            Statische Methode - bietet allgemeines Verfahren für die Deserialisierung Knoten Aufrufe virtuelle Methode DeserializeProperties zum Lesen der Eigenschaften eines bestimmten Knotens objectTypeName
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeProperties">
      <MemberSignature Language="C#" Value="protected virtual void DeserializeProperties (System.Xml.XmlReader xr, bool includeResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeserializeProperties(class System.Xml.XmlReader xr, bool includeResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.DeserializeProperties(System.Xml.XmlReader,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xr" Type="System.Xml.XmlReader" />
        <Parameter Name="includeResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="xr">XmlReader - müssen Leerzeichen ignorieren</param>
        <param name="includeResult">
        </param>
        <summary>
            Virtuelle Methode für die untergeordneten Elemente-Klassen, ihre Eigenschaften zu deserialisieren.
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeResult">
      <MemberSignature Language="C#" Value="protected void DeserializeResult (System.Xml.XmlReader xr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeserializeResult(class System.Xml.XmlReader xr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.DeserializeResult(System.Xml.XmlReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SqlServer.Diagnostics.STrace.STraceConfiguration(SkipAutoTrace=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xr" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xr">
        </param>
        <summary>
            Deserialisiert die letzten Ergebnisses 
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeWithResult">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Management.Dmf.ExpressionNode DeserializeWithResult (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.SqlServer.Management.Dmf.ExpressionNode DeserializeWithResult(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.DeserializeWithResult(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Dmf.ExpressionNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
        </param>
        <summary>
            Deserialisierung aus einer Zeichenfolge – XmlReader erstellt und tatsächliche Deserialisierungsprogramm aufruft. Die ExpressionNode Contail wird das Ergebnis der Auswertung für das bestimmte Ziel, das diese serialisierten Version des Knotens generiert hat.
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoConvertToFilterNode">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode DoConvertToFilterNode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode DoConvertToFilterNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.DoConvertToFilterNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary />
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoEnumAttributes">
      <MemberSignature Language="C#" Value="protected virtual void DoEnumAttributes (System.Collections.Generic.List&lt;string&gt; list);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DoEnumAttributes(class System.Collections.Generic.List`1&lt;string&gt; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.DoEnumAttributes(System.Collections.Generic.List{System.String})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.List&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="list">
        </param>
        <summary>
            Tatsächliche Struktur-enumerator
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumChildren">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.SqlServer.Management.Dmf.ExpressionNode&gt; EnumChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.SqlServer.Management.Dmf.ExpressionNode&gt; EnumChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.EnumChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SqlServer.Diagnostics.STrace.STraceConfiguration(SkipAutoTrace=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.SqlServer.Management.Dmf.ExpressionNode&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Listet die untergeordneten Elemente des Knotens
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualProperties">
      <MemberSignature Language="C#" Value="protected abstract bool EqualProperties (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EqualProperties(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.EqualProperties(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
        </param>
        <summary>
            virtuelle Methode für die Nachfolger zu bestimmten Typvergleich implementieren
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SqlServer.Diagnostics.STrace.STraceConfiguration(SkipAutoTrace=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
        </param>
        <summary>
            Außer Kraft gesetzte "gleich" Wertvergleich Inheritants unterstützen implementieren EqualProperties-Methode zum Typ Sepcific Vergleich
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (Microsoft.SqlServer.Management.Facets.FacetEvaluationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Evaluate(class Microsoft.SqlServer.Management.Facets.FacetEvaluationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Evaluate(Microsoft.SqlServer.Management.Facets.FacetEvaluationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SqlServer.Management.Facets.FacetEvaluationContext" />
      </Parameters>
      <Docs>
        <param name="context">Facetkontext Management</param>
        <summary>
            Wertet den Knoten (Struktur) mithilfe der bereitgestellten Management facetkontext
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (Microsoft.SqlServer.Management.Facets.FacetEvaluationContext context, bool checkSqlScriptAsProxy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Evaluate(class Microsoft.SqlServer.Management.Facets.FacetEvaluationContext context, bool checkSqlScriptAsProxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Evaluate(Microsoft.SqlServer.Management.Facets.FacetEvaluationContext,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SqlServer.Management.Facets.FacetEvaluationContext" />
        <Parameter Name="checkSqlScriptAsProxy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">Facetkontext Management</param>
        <param name="checkSqlScriptAsProxy">
        </param>
        <summary>
            Wertet den Knoten (Struktur) mithilfe der bereitgestellten Management facetkontext
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Außer Kraft gesetzte zur Unterstützung von außer Kraft gesetzte ist gleich
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResult">
      <MemberSignature Language="C#" Value="public object GetResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.GetResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SqlServer.Diagnostics.STrace.STraceConfiguration(SkipAutoTrace=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Ergebnis der letzten Auswertung
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResultString">
      <MemberSignature Language="C#" Value="public string GetResultString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetResultString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.GetResultString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Ergebnis der letzten Auswertung als Zeichenfolge
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastEvaluationResult">
      <MemberSignature Language="C#" Value="protected object LastEvaluationResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object LastEvaluationResult" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Management.Dmf.ExpressionNode.LastEvaluationResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary />
        <value>Muss hinzugefügt werden.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T MatchType&lt;T&gt; (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T MatchType&lt;T&gt;(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.MatchType``1(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SqlServer.Diagnostics.STrace.STraceConfiguration(SkipAutoTrace=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">ObjectType entsprechend</typeparam>
        <param name="value">name</param>
        <summary>
            Statische Methode - bietet generische Methode beim Abrufen der Enum-Typen aus ihren Zeichenfolgennamen
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToElementWithCheck">
      <MemberSignature Language="C#" Value="protected static void MoveToElementWithCheck (System.Xml.XmlReader xr, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void MoveToElementWithCheck(class System.Xml.XmlReader xr, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.MoveToElementWithCheck(System.Xml.XmlReader,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SqlServer.Diagnostics.STrace.STraceConfiguration(SkipAutoTrace=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xr" Type="System.Xml.XmlReader" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xr">
        </param>
        <param name="name">Knotenname (kann null sein)</param>
        <summary>
            Wechselt zu dem Knoten mit dem angegebenen Typ und Name (sofern bereitgestellt)
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
        <exception cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException">Wird ausgelöst, wenn kein Knoten im Datenstrom gefunden.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Management.Dmf.ExpressionNode Parse (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.SqlServer.Management.Dmf.ExpressionNode Parse(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Parse(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Dmf.ExpressionNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
        </param>
        <summary>
            Analysiert die Eingabezeichenfolge in ExpressionNode
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Management.Dmf.ExpressionNode Parse (string input, Type facet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.SqlServer.Management.Dmf.ExpressionNode Parse(string input, class System.Type facet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Parse(System.String,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Dmf.ExpressionNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="facet" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="input">
        </param>
        <param name="facet">
        </param>
        <summary>
            Eingabezeichenfolge in ExpressionNode analysiert und für das angegebene Facet überprüft
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadElementWithCheck">
      <MemberSignature Language="C#" Value="protected static string ReadElementWithCheck (System.Xml.XmlReader xr, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string ReadElementWithCheck(class System.Xml.XmlReader xr, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ReadElementWithCheck(System.Xml.XmlReader,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xr" Type="System.Xml.XmlReader" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xr">
        </param>
        <param name="name">Name des Elements</param>
        <summary>
            Liest und überprüft benanntes Element als Ganzes (Element - Text - EndElement)
            </summary>
        <returns>Text des Elements</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEndElement">
      <MemberSignature Language="C#" Value="protected void ReadEndElement (System.Xml.XmlReader xr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadEndElement(class System.Xml.XmlReader xr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ReadEndElement(System.Xml.XmlReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xr" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xr">
        </param>
        <summary>
            Liest und Instanz bestimmte Knoten EndElement überprüft
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadNodeWithCheck">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.List&lt;string&gt; ReadNodeWithCheck (System.Xml.XmlReader xr, string[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Generic.List`1&lt;string&gt; ReadNodeWithCheck(class System.Xml.XmlReader xr, string[] elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ReadNodeWithCheck(System.Xml.XmlReader,System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xr" Type="System.Xml.XmlReader" />
        <Parameter Name="elements" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xr">
        </param>
        <param name="elements">Liste von Elementen</param>
        <summary>
            Lese- und Veirifies angegeben ExpressionNode-Eigenschaften. Beendet das nach dem letzten angeforderten Elements lesen.
Angeforderte Eigenschaften müssen in der Reihenfolge aufgeführt werden, die sie in den Stream angezeigt werden.
            </summary>
        <returns>Liste mit Textwerten element</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadSimpleNodeWithCheck">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.List&lt;string&gt; ReadSimpleNodeWithCheck (System.Xml.XmlReader xr, Microsoft.SqlServer.Management.Dmf.ExpressionNodeType type, string[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Generic.List`1&lt;string&gt; ReadSimpleNodeWithCheck(class System.Xml.XmlReader xr, valuetype Microsoft.SqlServer.Management.Dmf.ExpressionNodeType type, string[] elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ReadSimpleNodeWithCheck(System.Xml.XmlReader,Microsoft.SqlServer.Management.Dmf.ExpressionNodeType,System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SqlServer.Diagnostics.STrace.STraceConfiguration(SkipAutoTrace=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xr" Type="System.Xml.XmlReader" />
        <Parameter Name="type" Type="Microsoft.SqlServer.Management.Dmf.ExpressionNodeType" />
        <Parameter Name="elements" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xr">
        </param>
        <param name="type">ExpressionNode Typ</param>
        <param name="elements">Liste der Eigenschaften</param>
        <summary>
            Liest und simple (und keine untergeordneten Elemente) ExpressionNode in seiner Gesamtheit, z. B. EndElement überprüft.
Angeforderte Eigenschaften müssen in der Reihenfolge aufgeführt werden, die sie in den Stream angezeigt werden.
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadWithCheck">
      <MemberSignature Language="C#" Value="protected static void ReadWithCheck (System.Xml.XmlReader xr, System.Xml.XmlNodeType nodeType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void ReadWithCheck(class System.Xml.XmlReader xr, valuetype System.Xml.XmlNodeType nodeType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ReadWithCheck(System.Xml.XmlReader,System.Xml.XmlNodeType,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xr" Type="System.Xml.XmlReader" />
        <Parameter Name="nodeType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xr">
        </param>
        <param name="nodeType">Knotentyp erwartet</param>
        <param name="name">erwartete Knotenname (kann null sein)</param>
        <summary>
            Liest den nächsten XML-Knoten, und überprüft, ob es erwartet hat, Typ und Name (sofern bereitgestellt)
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
        <exception cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException">Knotentyp ausgelöste Id und/oder Name stimmen nicht überein mit bereitgestellten Typ, Namen</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveEnum">
      <MemberSignature Language="C#" Value="protected static object ResolveEnum (string stringObjType, string stringValue);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object ResolveEnum(string stringObjType, string stringValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ResolveEnum(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringObjType" Type="System.String" />
        <Parameter Name="stringValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringObjType">
        </param>
        <param name="stringValue">
        </param>
        <summary>
            Enum-Objekt aus seiner Zeichenfolgendarstellung erstellt
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Serialize(System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SqlServer.Diagnostics.STrace.STraceConfiguration(SkipAutoTrace=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">
        </param>
        <summary>
            Basis Serialisierungsroutine - erstellt von Start- und Enddatum Elemente Aufrufe virtuellen Methode SerializeProperties zur Ausgabeeigenschaften von bestimmten Knoten ObjectTypeName
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeNode">
      <MemberSignature Language="C#" Value="public static string SerializeNode (Microsoft.SqlServer.Management.Dmf.ExpressionNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SerializeNode(class Microsoft.SqlServer.Management.Dmf.ExpressionNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SerializeNode(Microsoft.SqlServer.Management.Dmf.ExpressionNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.SqlServer.Management.Dmf.ExpressionNode" />
      </Parameters>
      <Docs>
        <param name="node">
        </param>
        <summary>
            Der angegebene Knoten serialisiert in eine Zeichenfolge 
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
        <exception cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SerializeNodeWithResult">
      <MemberSignature Language="C#" Value="public static string SerializeNodeWithResult (Microsoft.SqlServer.Management.Dmf.ExpressionNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SerializeNodeWithResult(class Microsoft.SqlServer.Management.Dmf.ExpressionNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SerializeNodeWithResult(Microsoft.SqlServer.Management.Dmf.ExpressionNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SqlServer.Diagnostics.STrace.STraceConfiguration(SkipAutoTrace=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.SqlServer.Management.Dmf.ExpressionNode" />
      </Parameters>
      <Docs>
        <param name="node">
        </param>
        <summary>
            Der angegebene Knoten serialisiert in eine Zeichenfolge
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeProperties">
      <MemberSignature Language="C#" Value="protected virtual void SerializeProperties (System.Xml.XmlWriter xw, bool includeResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SerializeProperties(class System.Xml.XmlWriter xw, bool includeResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SerializeProperties(System.Xml.XmlWriter,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xw" Type="System.Xml.XmlWriter" />
        <Parameter Name="includeResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="xw">
        </param>
        <param name="includeResult">
        </param>
        <summary>
            Virtuelle Methode für die untergeordneten Elemente von Klassen zum Serialisieren von deren Eigenschaften
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeResult">
      <MemberSignature Language="C#" Value="protected void SerializeResult (System.Xml.XmlWriter xw);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeResult(class System.Xml.XmlWriter xw) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SerializeResult(System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SqlServer.Diagnostics.STrace.STraceConfiguration(SkipAutoTrace=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xw" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="xw">
        </param>
        <summary>
            Letzte Ergebnis enthält, in der Ausgabe der Serialisierung
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFilterNodeCompatible">
      <MemberSignature Language="C#" Value="protected void SetFilterNodeCompatible (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetFilterNodeCompatible(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SetFilterNodeCompatible(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
        </param>
        <summary />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHasScript">
      <MemberSignature Language="C#" Value="protected void SetHasScript (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetHasScript(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SetHasScript(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
        </param>
        <summary />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNameConditionType">
      <MemberSignature Language="C#" Value="protected void SetNameConditionType (Microsoft.SqlServer.Management.Dmf.NameConditionType value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNameConditionType(valuetype Microsoft.SqlServer.Management.Dmf.NameConditionType value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SetNameConditionType(Microsoft.SqlServer.Management.Dmf.NameConditionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Microsoft.SqlServer.Management.Dmf.NameConditionType" />
      </Parameters>
      <Docs>
        <param name="value">
        </param>
        <summary />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNodeType">
      <MemberSignature Language="C#" Value="protected void SetNodeType (Microsoft.SqlServer.Management.Dmf.ExpressionNodeType value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeType(valuetype Microsoft.SqlServer.Management.Dmf.ExpressionNodeType value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SetNodeType(Microsoft.SqlServer.Management.Dmf.ExpressionNodeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Microsoft.SqlServer.Management.Dmf.ExpressionNodeType" />
      </Parameters>
      <Docs>
        <param name="value">Muss hinzugefügt werden.</param>
        <summary />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetObjectName">
      <MemberSignature Language="C#" Value="protected void SetObjectName (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetObjectName(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SetObjectName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
        </param>
        <summary />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperties">
      <MemberSignature Language="C#" Value="protected virtual void SetProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SetProperties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Legt Klasseneigenschaften (HasScript, NameConditionType,...)
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTypeClass">
      <MemberSignature Language="C#" Value="protected void SetTypeClass (Microsoft.SqlServer.Management.Dmf.TypeClass value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetTypeClass(valuetype Microsoft.SqlServer.Management.Dmf.TypeClass value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SetTypeClass(Microsoft.SqlServer.Management.Dmf.TypeClass)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Microsoft.SqlServer.Management.Dmf.TypeClass" />
      </Parameters>
      <Docs>
        <param name="value">
        </param>
        <summary />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Tag des Knotens 
            </summary>
        <value>Muss hinzugefügt werden.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Stellt-Ausdruck als eine Zeichenfolge in T-SQL like-syntax
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToStringForDisplay">
      <MemberSignature Language="C#" Value="public virtual string ToStringForDisplay ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToStringForDisplay() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ToStringForDisplay" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SqlServer.Diagnostics.STrace.STraceConfiguration(SkipAutoTrace=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Eine spezielle Methode zur einige einfache Knoten in der Benutzeroberfläche in vereinfachter Form angezeigt, die immer wieder analysiert werden kann
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToStringForUrn">
      <MemberSignature Language="C#" Value="public string ToStringForUrn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToStringForUrn() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ToStringForUrn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Stellt-Ausdruck als eine Zeichenfolge in T-SQL like-Syntax, die im URN verwendet werden können
            </summary>
        <returns />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Management.Dmf.ExpressionNodeType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Management.Dmf.ExpressionNodeType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Dmf.ExpressionNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Typ des Knotens (schreibgeschützt)
            </summary>
        <value>Muss hinzugefügt werden.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeClass">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Management.Dmf.TypeClass TypeClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Management.Dmf.TypeClass TypeClass" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Management.Dmf.ExpressionNode.TypeClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Dmf.TypeClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Des Knotens "typeclass"
            </summary>
        <value>Muss hinzugefügt werden.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
