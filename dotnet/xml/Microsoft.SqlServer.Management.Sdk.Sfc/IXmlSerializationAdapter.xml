<Type Name="IXmlSerializationAdapter" FullName="Microsoft.SqlServer.Management.Sdk.Sfc.IXmlSerializationAdapter">
  <TypeSignature Language="C#" Value="public interface IXmlSerializationAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlSerializationAdapter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Management.Sdk.Sfc.IXmlSerializationAdapter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.Management.Sdk.Sfc</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Die Schnittstelle des Adapters, die serialisiert und deserialisiert Objekt von einem einige nicht SFC-Typ für SfcSerializer.
            </summary>
    <remarks>Muss hinzugefügt werden.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public void ReadXml (System.Xml.XmlReader reader, out object deserializedObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlReader reader, object deserializedObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Sdk.Sfc.IXmlSerializationAdapter.ReadXml(System.Xml.XmlReader,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="deserializedObject" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader">
        </param>
        <param name="deserializedObject">
        </param>
        <summary>
            Deserialisiert Objekt aus seiner XML-Darstellung (die einen gültigen XML-Code wird). Implementierung dieser Schnittstelle unescape sollten ungültige XML-Zeichen, die in der WriteXml(), mit SfcSecureString.XmlUnEscape() geschützt wurden
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, object objectToSerialize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlWriter writer, object objectToSerialize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Sdk.Sfc.IXmlSerializationAdapter.WriteXml(System.Xml.XmlWriter,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="objectToSerialize" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
        </param>
        <param name="objectToSerialize">
        </param>
        <summary>
            Serialisiert ein Objekt in seine XML-Darstellung. Die Implementierung dieser Schnittstelle sollten: 1. erzeugen Sie eine gültige XML-Dokument (nicht nur ein Fragment), ebenso wie XmlSerializer-Element.
2. Ungültige XML-Zeichen in eine Zeichenfolgendarstellung des angegebenen Objekts Escape, ggf. mit SfcSecureString.XmlEscape()
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
