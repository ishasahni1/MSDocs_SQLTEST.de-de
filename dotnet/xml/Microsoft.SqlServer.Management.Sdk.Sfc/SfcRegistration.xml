<Type Name="SfcRegistration" FullName="Microsoft.SqlServer.Management.Sdk.Sfc.SfcRegistration">
  <TypeSignature Language="C#" Value="public sealed class SfcRegistration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SfcRegistration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcRegistration" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.Management.Sdk.Sfc</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public static object CreateObject (string fullTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateObject(string fullTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Sdk.Sfc.SfcRegistration.CreateObject(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fullTypeName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Domains">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Management.Sdk.Sfc.SfcDomainInfoCollection Domains { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Management.Sdk.Sfc.SfcDomainInfoCollection Domains" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Management.Sdk.Sfc.SfcRegistration.Domains" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Sdk.Sfc.SfcDomainInfoCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Eine statische Funktion zum Zurückgeben der aktuellen registrierten Domänen gegenwärtig wird zurückgegeben, die einen hartcodierten codierte Liste für die Domänen, die nur bekannte: SMO, DC, Acme und DMF
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectTypeFromFullName">
      <MemberSignature Language="C#" Value="public static Type GetObjectTypeFromFullName (string fullTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetObjectTypeFromFullName(string fullTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Sdk.Sfc.SfcRegistration.GetObjectTypeFromFullName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fullTypeName">
        </param>
        <summary>
            Erhalten Sie einen vollqualifizierten .net Typ aus den vollqualifizierten Typnamen Assembly nicht registriert ist, Ausnahme ausgelöst.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectTypeFromFullName">
      <MemberSignature Language="C#" Value="public static Type GetObjectTypeFromFullName (string fullTypeName, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetObjectTypeFromFullName(string fullTypeName, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Sdk.Sfc.SfcRegistration.GetObjectTypeFromFullName(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullTypeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fullTypeName">
        </param>
        <param name="ignoreCase">"true", um die Groß-/Kleinschreibung des Typnamens zu ignorieren; andernfalls "false".</param>
        <summary>
            Erhalten Sie einen vollqualifizierten .net Typ aus den vollqualifizierten Typnamen Assembly nicht registriert ist, Ausnahme ausgelöst.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredDomainForType">
      <MemberSignature Language="C#" Value="public static string GetRegisteredDomainForType (string fullTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRegisteredDomainForType(string fullTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Sdk.Sfc.SfcRegistration.GetRegisteredDomainForType(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fullTypeName">
        </param>
        <summary>
            Gibt den Domänennamen für einen bestimmten Typ
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredDomainForType">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Management.Sdk.Sfc.SfcDomainInfo GetRegisteredDomainForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.SqlServer.Management.Sdk.Sfc.SfcDomainInfo GetRegisteredDomainForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Sdk.Sfc.SfcRegistration.GetRegisteredDomainForType(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Sdk.Sfc.SfcDomainInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
        </param>
        <summary>
            Gibt das Objekt mit Domäneninformationen für einen bestimmten Typ
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredDomainForType">
      <MemberSignature Language="C#" Value="public static string GetRegisteredDomainForType (string fullTypeName, bool throwOnUnregisteredDomain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRegisteredDomainForType(string fullTypeName, bool throwOnUnregisteredDomain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Sdk.Sfc.SfcRegistration.GetRegisteredDomainForType(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullTypeName" Type="System.String" />
        <Parameter Name="throwOnUnregisteredDomain" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fullTypeName">
        </param>
        <param name="throwOnUnregisteredDomain">
        </param>
        <summary>
            Gibt den Domänennamen für einen bestimmten Typ
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetObjectTypeFromFullName">
      <MemberSignature Language="C#" Value="public static Type TryGetObjectTypeFromFullName (string fullTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type TryGetObjectTypeFromFullName(string fullTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Sdk.Sfc.SfcRegistration.TryGetObjectTypeFromFullName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fullTypeName">
        </param>
        <summary>
            Get ein vollqualifizierten .net Typ aus den vollqualifizierten Typnamen Wenn Assembly nicht registriert, wird null ist zurückgegeben wird.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
