<Type Name="IDTSComponentEvents" FullName="Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents">
  <TypeSignature Language="C#" Value="public interface IDTSComponentEvents" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDTSComponentEvents" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.ManagedDTS</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Schnittstelle für das Auslösen von Ereignissen.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FireBreakpointHit">
      <MemberSignature Language="C#" Value="public void FireBreakpointHit (Microsoft.SqlServer.Dts.Runtime.BreakpointTarget breakpointTarget);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FireBreakpointHit(class Microsoft.SqlServer.Dts.Runtime.BreakpointTarget breakpointTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents.FireBreakpointHit(Microsoft.SqlServer.Dts.Runtime.BreakpointTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="breakpointTarget" Type="Microsoft.SqlServer.Dts.Runtime.BreakpointTarget" />
      </Parameters>
      <Docs>
        <param name="breakpointTarget">Die <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget" /> im Paket, das dieses Ereignis auslösen soll.</param>
        <summary>Löst ein Ereignis aus, wenn ein Breakpointziel im Paket erreicht wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FireCustomEvent">
      <MemberSignature Language="C#" Value="public void FireCustomEvent (string eventName, string eventText, ref object[] arguments, string subComponent, ref bool fireAgain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FireCustomEvent(string eventName, string eventText, object[] arguments, string subComponent, bool fireAgain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents.FireCustomEvent(System.String,System.String,System.Object[]@,System.String,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventText" Type="System.String" />
        <Parameter Name="arguments" Type="System.Object[]&amp;" RefType="ref" />
        <Parameter Name="subComponent" Type="System.String" />
        <Parameter Name="fireAgain" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="eventName">Der Name des auszulösenden Ereignisses.</param>
        <param name="eventText">Der Text, der das Ereignis beschreibt.</param>
        <param name="arguments">Ein Array der Argumente, die an das Ereignis übergeben werden sollen.</param>
        <param name="subComponent">Ein String-Wert, der weitere Details zur Ereignisquelle enthält.</param>
        <param name="fireAgain">Ein boolescher Wert, der Dies weist darauf hin soll weiterhin ausgelöst bzw. nicht mehr ausgelöst werden. Der Wert "true" gibt an, dass das Ereignis weiterhin ausgelöst werden soll.</param>
        <summary>Tritt auf, wenn Tasks benutzerdefinierte Taskereignisse auslösen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FireError">
      <MemberSignature Language="C#" Value="public bool FireError (int errorCode, string subComponent, string description, string helpFile, int helpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FireError(int32 errorCode, string subComponent, string description, string helpFile, int32 helpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents.FireError(System.Int32,System.String,System.String,System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
        <Parameter Name="subComponent" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="helpFile" Type="System.String" />
        <Parameter Name="helpContext" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorCode">Ein Integer-Wert, durch den die Fehlermeldung identifiziert wird. </param>
        <param name="subComponent">Ein String-Wert, der weitere Details zur Ereignisquelle enthält.</param>
        <param name="description">Der Text der Meldung.</param>
        <param name="helpFile">Der Pfad zur Hilfedatei, die ausführliche Informationen enthält.</param>
        <param name="helpContext">Der Bezeichner des Themas in der Hilfedatei.</param>
        <summary>Löst ein Ereignis aus, wenn ein Fehler auftritt.</summary>
        <returns>Ein boolescher Wert, der angibt, ob das Ereignis ausgelöst weiterhin bzw. nicht mehr ausgelöst werden soll. Der Wert "true" gibt an, dass das Ereignis weiterhin ausgelöst werden soll.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FireInformation">
      <MemberSignature Language="C#" Value="public void FireInformation (int informationCode, string subComponent, string description, string helpFile, int helpContext, ref bool fireAgain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FireInformation(int32 informationCode, string subComponent, string description, string helpFile, int32 helpContext, bool fireAgain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents.FireInformation(System.Int32,System.String,System.String,System.String,System.Int32,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="informationCode" Type="System.Int32" />
        <Parameter Name="subComponent" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="helpFile" Type="System.String" />
        <Parameter Name="helpContext" Type="System.Int32" />
        <Parameter Name="fireAgain" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="informationCode">Eine ganze Zahl, die die informationsmeldung identifiziert wird. </param>
        <param name="subComponent">Ein String-Wert, der weitere Details zur Ereignisquelle enthält.</param>
        <param name="description">Der Text der Meldung.</param>
        <param name="helpFile">Der Pfad zur Hilfedatei, die ausführliche Informationen enthält.</param>
        <param name="helpContext">Der Bezeichner des Themas in der Hilfedatei.</param>
        <param name="fireAgain">Ein boolescher Wert, der Dies weist darauf hin soll weiterhin ausgelöst bzw. nicht mehr ausgelöst werden. Der Wert "true" gibt an, dass das Ereignis weiterhin ausgelöst werden soll.</param>
        <summary>Löst ein Ereignis aus, das Informationen enthält.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FireProgress">
      <MemberSignature Language="C#" Value="public void FireProgress (string progressDescription, int percentComplete, int progressCountLow, int progressCountHigh, string subComponent, ref bool fireAgain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FireProgress(string progressDescription, int32 percentComplete, int32 progressCountLow, int32 progressCountHigh, string subComponent, bool fireAgain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents.FireProgress(System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progressDescription" Type="System.String" />
        <Parameter Name="percentComplete" Type="System.Int32" />
        <Parameter Name="progressCountLow" Type="System.Int32" />
        <Parameter Name="progressCountHigh" Type="System.Int32" />
        <Parameter Name="subComponent" Type="System.String" />
        <Parameter Name="fireAgain" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="progressDescription">Eine Zeichenfolge, die das Statusereignis beschreibt, das ausgelöst wird.</param>
        <param name="percentComplete">Eine ganze Zahl verwendet, um anzugeben, wie viel Prozent des Tasks abgeschlossen wurden.</param>
        <param name="progressCountLow">Eine ganze Zahl, die die unteren 32 Bits der abgeschlossenen Einheiten enthält.</param>
        <param name="progressCountHigh">Eine ganze Zahl, die die oberen 32 Bits der abgeschlossenen Einheiten enthält.</param>
        <param name="subComponent">Ein String-Wert, der weitere Details zur Ereignisquelle enthält.</param>
        <param name="fireAgain">Ein boolescher Wert, der Dies weist darauf hin soll weiterhin ausgelöst bzw. nicht mehr ausgelöst werden. Der Wert "true" gibt an, dass das Ereignis weiterhin ausgelöst werden soll.</param>
        <summary>Löst ein Ereignis aus, wenn das ausführbare Element messbaren Fortschritt erzielt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FireQueryCancel">
      <MemberSignature Language="C#" Value="public bool FireQueryCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FireQueryCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents.FireQueryCancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löst ein Ereignis aus, um zu bestimmen, ob die Ausführung eines ausführbaren Elements beendet werden soll.</summary>
        <returns>Ein boolescher Wert, der angibt, ob es sich bei der Ausführung die Aufgabe beendet werden soll.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FireWarning">
      <MemberSignature Language="C#" Value="public void FireWarning (int warningCode, string subComponent, string description, string helpFile, int helpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FireWarning(int32 warningCode, string subComponent, string description, string helpFile, int32 helpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents.FireWarning(System.Int32,System.String,System.String,System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warningCode" Type="System.Int32" />
        <Parameter Name="subComponent" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="helpFile" Type="System.String" />
        <Parameter Name="helpContext" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="warningCode">Ein Integer-Wert, durch den die Warnmeldung identifiziert wird.</param>
        <param name="subComponent">Ein String-Wert, der weitere Details zur Ereignisquelle enthält.</param>
        <param name="description">Der Text der Meldung.</param>
        <param name="helpFile">Der Pfad zur Hilfedatei, die ausführliche Informationen enthält.</param>
        <param name="helpContext">Der Bezeichner des Themas in der Hilfedatei.</param>
        <summary>Löst ein Ereignis aus, sobald sich der Task in einem Zustand befindet, der keinen Fehler, aber eine Warnung des Clients rechtfertigt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
