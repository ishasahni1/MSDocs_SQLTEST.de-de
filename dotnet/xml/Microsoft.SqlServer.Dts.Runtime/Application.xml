<Type Name="Application" FullName="Microsoft.SqlServer.Dts.Runtime.Application">
  <TypeSignature Language="C#" Value="public class Application : Microsoft.SqlServer.Dts.Runtime.DtsObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Application extends Microsoft.SqlServer.Dts.Runtime.DtsObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Dts.Runtime.Application" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.ManagedDTS</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SqlServer.Dts.Runtime.DtsObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ermittelt <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package" />-Objekte und greift auf sie zu. Außerdem ist der Zugriff auf Auflistungen und Eigenschaften möglich, die Informationen zum System enthalten.</summary>
    <remarks>Muss hinzugefügt werden.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Application ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application" /> Klasse.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSignatureOnLoad">
      <MemberSignature Language="C#" Value="public bool CheckSignatureOnLoad { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckSignatureOnLoad" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Application.CheckSignatureOnLoad" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Laufzeit beim Laden des Pakets die digitale Signatur des Pakets überprüfen soll, oder legt ihn fest.</summary>
        <value>"true", wenn die Laufzeit die digitale Signatur überprüft wird, wenn ein Paket geladen; andernfalls "false". Der Standardwert ist true.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentStorePath">
      <MemberSignature Language="C#" Value="public string ComponentStorePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ComponentStorePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Application.ComponentStorePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt den Pfad zurück, unter dem Pipelinekomponenten gespeichert sind. Diese Eigenschaft ist schreibgeschützt. </summary>
        <value>Eine Zeichenfolge, die den Speicherort der Pipelinekomponenten angibt.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionInfos">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.ConnectionInfos ConnectionInfos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SqlServer.Dts.Runtime.ConnectionInfos ConnectionInfos" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Application.ConnectionInfos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.ConnectionInfos</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfos" /> Sammlung mit <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo" /> Objekte. Diese Eigenschaft ist schreibgeschützt.</summary>
        <value>Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfos" /> Sammlung mit <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo" /> Objekte. </value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFolderOnDtsServer">
      <MemberSignature Language="C#" Value="public void CreateFolderOnDtsServer (string sParent, string sNewFolderName, string sServerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateFolderOnDtsServer(string sParent, string sNewFolderName, string sServerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.CreateFolderOnDtsServer(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sParent" Type="System.String" />
        <Parameter Name="sNewFolderName" Type="System.String" />
        <Parameter Name="sServerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sParent">Der Name des Ordners der obersten Ebene, unter dem dieser Ordner gespeichert werden soll.</param>
        <param name="sNewFolderName">Der Name für den neu erstellten Ordner.</param>
        <param name="sServerName">Der Name des Servers, auf dem der Dienst "Integration Services" ausgeführt wird.</param>
        <summary>Erstellt einen Ordner auf dem Server, der im Knoten „Gespeicherte Pakete“ der Integration Services-Diensthierarchie angezeigt wird </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFolderOnSqlServer">
      <MemberSignature Language="C#" Value="public void CreateFolderOnSqlServer (string strParent, string strNewFolderName, string strServerName, string strServerUserName, string strServerPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateFolderOnSqlServer(string strParent, string strNewFolderName, string strServerName, string strServerUserName, string strServerPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.CreateFolderOnSqlServer(System.String,System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strParent" Type="System.String" />
        <Parameter Name="strNewFolderName" Type="System.String" />
        <Parameter Name="strServerName" Type="System.String" />
        <Parameter Name="strServerUserName" Type="System.String" />
        <Parameter Name="strServerPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strParent">Der Name des übergeordneten Ordners. Wenn Sie einen Ordner unter dem Knoten "Dateisystem" erstellen möchten, verwenden Sie die <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.CreateFolderOnDtsServer(System.String,System.String,System.String)" /> Methode.</param>
        <param name="strNewFolderName">Der Name des zu erstellenden Ordners.</param>
        <param name="strServerName">Der Name der SQL Server-Instanz.</param>
        <param name="strServerUserName">Der beim Authentifizieren auf dem Server zu verwendende Benutzername.</param>
        <param name="strServerPassword">Das dem <paramref name="strServerUserName" />-Konto zugeordnete Kennwort.</param>
        <summary>Erstellt einen Ordner für die angegebene SQL Server-Instanz.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSsisServerExecution">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSServerExecution100 CreateSsisServerExecution (string serverName, string packagePath, string referenceId, bool use32BitRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSServerExecution100 CreateSsisServerExecution(string serverName, string packagePath, string referenceId, bool use32BitRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.CreateSsisServerExecution(System.String,System.String,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSServerExecution100</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="packagePath" Type="System.String" />
        <Parameter Name="referenceId" Type="System.String" />
        <Parameter Name="use32BitRuntime" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverName">Der Servername.</param>
        <param name="packagePath">Der Pfad für das Paket.</param>
        <param name="referenceId">Der Verweisbezeichner.</param>
        <param name="use32BitRuntime">Gibt an, ob die 32-Bit-Laufzeit verwendet wird, um das Paket unter einem 64-Bit-Betriebssystem auszuführen.</param>
        <summary>Erstellt die SSIS Serverausführung.</summary>
        <returns>Der erstellte SSIS-Server.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTypeInfoFromDataType">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.DataTypeInfo DataTypeInfoFromDataType (Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType dt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.SqlServer.Dts.Runtime.DataTypeInfo DataTypeInfoFromDataType(valuetype Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType dt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.DataTypeInfoFromDataType(Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.DataTypeInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dt" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType" />
      </Parameters>
      <Docs>
        <param name="dt">Der Datentyp. </param>
        <summary>Gibt das <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfo" />-Objekt für den angegebenen Datentyp zurück. </summary>
        <returns>Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfo" /> Objekt.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTypeInfos">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.DataTypeInfos DataTypeInfos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SqlServer.Dts.Runtime.DataTypeInfos DataTypeInfos" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Application.DataTypeInfos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.DataTypeInfos</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfos" /> Sammlung mit <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfo" /> Objekte. Diese Eigenschaft ist schreibgeschützt.</summary>
        <value>Ein <see cref="P:Microsoft.SqlServer.Dts.Runtime.Application.DataTypeInfos" /> Sammlung mit <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfo" /> Objekte. </value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DBProviderInfos">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.DBProviderInfos DBProviderInfos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SqlServer.Dts.Runtime.DBProviderInfos DBProviderInfos" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Application.DBProviderInfos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.DBProviderInfos</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfos" /> Sammlung mit <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfo" /> Objekte in der Anwendung. Diese Eigenschaft ist schreibgeschützt.</summary>
        <value>Ein <see cref="P:Microsoft.SqlServer.Dts.Runtime.Application.DBProviderInfos" /> Auflistung mit allen der <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfo" /> Objekte für die Anwendung. </value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DumpDescriptor">
      <MemberSignature Language="C#" Value="public string DumpDescriptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DumpDescriptor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Application.DumpDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Sicherungsdeskriptor für die Anwendung ab oder legt ihn fest.</summary>
        <value>Der Sicherungsdeskriptor für die Anwendung.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DumpOnAnyError">
      <MemberSignature Language="C#" Value="public bool DumpOnAnyError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DumpOnAnyError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Application.DumpOnAnyError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, ob die Anwendung bei Fehlern einen Dump erstellt.</summary>
        <value>True, wenn die Anwendung bei Fehlern einen Dump erstellt. andernfalls "false".</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDump">
      <MemberSignature Language="C#" Value="public bool EnableDump { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDump" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Application.EnableDump" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, ob die Anwendung Dump-Sicherungen ermöglicht.</summary>
        <value>"True", wenn die Anwendung Dump-Sicherungen ermöglicht; andernfalls "false".</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExistsOnDtsServer">
      <MemberSignature Language="C#" Value="public bool ExistsOnDtsServer (string sPackagePath, string sServerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ExistsOnDtsServer(string sPackagePath, string sServerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.ExistsOnDtsServer(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sPackagePath" Type="System.String" />
        <Parameter Name="sServerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sPackagePath">Der vollqualifizierte Pfad des Pakets.</param>
        <param name="sServerName">Der Name des Servers, der nach dem Paket durchsucht werden soll.</param>
        <summary>Gibt einen booleschen Wert ab, der angibt, ob das angegebene Paket bereits auf dem Integration Services-Dienst vorhanden ist.</summary>
        <returns>True, wenn das Paket vom angegebenen <paramref name="sPackagePath" /> vorhanden ist, auf dem Server mit dem Namen von <paramref name="sServerName" />, andernfalls "false".</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExistsOnSqlServer">
      <MemberSignature Language="C#" Value="public bool ExistsOnSqlServer (string packagePath, string serverName, string serverUserName, string serverPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ExistsOnSqlServer(string packagePath, string serverName, string serverUserName, string serverPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.ExistsOnSqlServer(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packagePath" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="serverUserName" Type="System.String" />
        <Parameter Name="serverPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packagePath">Das Paket, das Sie suchen.</param>
        <param name="serverName">Der Name der SQL Server-Instanz, die nach dem Paket durchsucht werden soll.</param>
        <param name="serverUserName">Der für die SQL Server-Instanz zu authentifizierende Benutzername.</param>
        <param name="serverPassword">Das Kennwort für den angegebenen <paramref name="serverUserName" />.</param>
        <summary>Gibt einen booleschen Wert ab, der angibt, ob das angegebene Paket auf der Instanz von SQL Server vorhanden ist.</summary>
        <returns>"true", wenn das Paket für die angegebene Instanz von SQL Server vorhanden ist. "false", wenn das Paket nicht vorhanden ist.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FolderExistsOnDtsServer">
      <MemberSignature Language="C#" Value="public bool FolderExistsOnDtsServer (string sFolderName, string sServerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool FolderExistsOnDtsServer(string sFolderName, string sServerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.FolderExistsOnDtsServer(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sFolderName" Type="System.String" />
        <Parameter Name="sServerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sFolderName">Der Name des Ordners, den Sie suchen. Um festzustellen, ob ein Ordner "MyFolder" unter dem Ordner Dateisystem vorhanden ist, verwenden Sie z. B. die mit Escapezeichen versehene Zeichenfolge @"\File System\myFolder".</param>
        <param name="sServerName">Der Name des Servers, der nach dem Paket durchsucht werden soll.</param>
        <summary>Gibt einen booleschen Wert ab, der angibt, ob der angegebene Ordner im Dateisystem bereits vorhanden ist.</summary>
        <returns>"true", wenn der angegebene Ordner auf dem Server vorhanden ist; "false", wenn der Ordner nicht vorhanden ist.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FolderExistsOnSqlServer">
      <MemberSignature Language="C#" Value="public bool FolderExistsOnSqlServer (string strFolderName, string strServerName, string strServerUserName, string strServerPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool FolderExistsOnSqlServer(string strFolderName, string strServerName, string strServerUserName, string strServerPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.FolderExistsOnSqlServer(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strFolderName" Type="System.String" />
        <Parameter Name="strServerName" Type="System.String" />
        <Parameter Name="strServerUserName" Type="System.String" />
        <Parameter Name="strServerPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strFolderName">Der Ordner, den Sie suchen.</param>
        <param name="strServerName">Der Name der SQL Server-Instanz, die nach dem Paket durchsucht werden soll.</param>
        <param name="strServerUserName">Der für die SQL Server-Instanz zu authentifizierende Benutzername.</param>
        <param name="strServerPassword">Das Kennwort für den angegebenen <paramref name="strServerUserName" />.</param>
        <summary>Gibt einen booleschen Wert ab, der angibt, ob der angegebene Ordner für die Instanz von SQL Server bereits vorhanden ist.</summary>
        <returns>"true", wenn der Ordner für die angegebene Instanz von SQL Server vorhanden ist; "false", wenn der Ordner nicht vorhanden ist.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachEnumeratorInfos">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfos ForEachEnumeratorInfos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfos ForEachEnumeratorInfos" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Application.ForEachEnumeratorInfos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfos</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfos" /> Sammlung mit <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfo" /> Objekte. Diese Eigenschaft ist schreibgeschützt.</summary>
        <value>Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfos" /> Auflistung mit allen der <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfo" /> Objekte in der Anwendung. </value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDtsServerPackageInfos">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.PackageInfos GetDtsServerPackageInfos (string sPackageFolder, string sServerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.SqlServer.Dts.Runtime.PackageInfos GetDtsServerPackageInfos(string sPackageFolder, string sServerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.GetDtsServerPackageInfos(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.PackageInfos</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sPackageFolder" Type="System.String" />
        <Parameter Name="sServerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sPackageFolder">Der Ordner unter Gespeicherte Pakete, der die aufzuzählenden Pakete enthält. Wenn Paketinformationen aus der Msdb-Datenbank in SQL Server werden sollen, können Sie auch die <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.GetPackageInfos(System.String,System.String,System.String,System.String)" /> Methode. Die Ordner, in denen Pakete innerhalb des SSIS-Paketspeichers gespeichert werden, können über den Knoten gespeicherte Pakete in Management Studio erstellt werden, mit dem Befehlszeilen-Hilfsprogramm dtutil.exe oder durch die <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.CreateFolderOnDtsServer(System.String,System.String,System.String)" /> Methode.</param>
        <param name="sServerName">Der Name der SQL Server-Instanz, in der sich die Pakete befinden. Verwenden Sie für den lokalen Server den Servernamen oder "."; "(local)" und "localhost" sind nicht zulässig.</param>
        <summary>Ruft eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfos" /> -Auflistung, die im SSIS-Paketspeicher auf einer Instanz von SQL Server, innerhalb des angegebenen Ordners gespeicherten Pakete enthält.</summary>
        <returns>Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfos" /> Sammlung mit <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfo" /> Objekte.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDtsServerRoles">
      <MemberSignature Language="C#" Value="public string[] GetDtsServerRoles (string sFolderPath, string sServerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDtsServerRoles(string sFolderPath, string sServerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.GetDtsServerRoles(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sFolderPath" Type="System.String" />
        <Parameter Name="sServerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sFolderPath">Der Ordner, dessen Rollen für Sie von Interesse sind. </param>
        <param name="sServerName">Der Name der Instanz, von der der Dienst "Integration Services" ausgeführt wird.</param>
        <summary>Gibt ein Array von String-Werten zurück, in dem die für einen Ordner verfügbaren Rollen aufgelistet sind.</summary>
        <returns>Ein Array von String-Werten. Jeder Zeichenfolgenwert enthält einen Rollennamen.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPackageInfos">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.PackageInfos GetPackageInfos (string strFolder, string serverName, string serverUserName, string serverPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.SqlServer.Dts.Runtime.PackageInfos GetPackageInfos(string strFolder, string serverName, string serverUserName, string serverPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.GetPackageInfos(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.PackageInfos</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strFolder" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="serverUserName" Type="System.String" />
        <Parameter Name="serverPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strFolder">Der logische Ordner, der die aufzuzählenden Pakete enthält. Wenn Sie Paketinformationen aus dem Ordner Dateisystem im SSIS-Paketspeicher abzurufen, verwenden Sie die <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.GetDtsServerPackageInfos(System.String,System.String)" /> Methode. Die logischen Ordner, in denen Pakete innerhalb von MSDB gespeichert werden, können über den Knoten gespeicherte pakete\msdb in Management Studio erstellt werden, mit dem Befehlszeilen-Hilfsprogramm dtutil.exe oder durch die <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.CreateFolderOnSqlServer(System.String,System.String,System.String,System.String,System.String)" /> Methode.</param>
        <param name="serverName">Der Name der SQL Server-Instanz, in der sich die Pakete befinden. </param>
        <param name="serverUserName">Der Kontoname verwendet, um melden Sie sich mit der Instanz von SQL Server, wenn Sie zur Anmeldung bei SQL Server unter Verwendung der Standardauthentifizierung müssen. Wenn Sie Windows-Authentifizierung verwenden, verwenden Sie null an.</param>
        <param name="serverPassword">Das Kennwort des Benutzerkontos ein, wenn Sie zur Anmeldung bei SQL Server unter Verwendung der Standardauthentifizierung müssen. Wenn Sie Windows-Authentifizierung verwenden, verwenden Sie null an.</param>
        <summary>Ruft eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfos" /> -Auflistung, die mithilfe der Servername, Benutzername und Kennwort einer Instanz von SQL Server, innerhalb des angegebenen logischen Ordners gespeicherten Pakete enthält.</summary>
        <returns>Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfos" /> Auflistung.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPackageInfos2">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.PackageInfos GetPackageInfos2 (string strFolder, object connectionObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.SqlServer.Dts.Runtime.PackageInfos GetPackageInfos2(string strFolder, object connectionObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.GetPackageInfos2(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.PackageInfos</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strFolder" Type="System.String" />
        <Parameter Name="connectionObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="strFolder">Der logische Ordner, der die aufzuzählenden Pakete enthält. Wenn Sie Paketinformationen aus dem Ordner Dateisystem im SSIS-Paketspeicher abzurufen, verwenden Sie die <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.GetDtsServerPackageInfos(System.String,System.String)" /> Methode. Die logischen Ordner, in denen Pakete innerhalb von MSDB gespeichert werden, können über den Knoten gespeicherte pakete\msdb in Management Studio erstellt werden, mit dem Befehlszeilen-Hilfsprogramm dtutil.exe oder durch die <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.CreateFolderOnSqlServer(System.String,System.String,System.String,System.String,System.String)" /> Methode.</param>
        <param name="connectionObject">Das Verbindungsobjekt.</param>
        <summary>Ruft eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfos" /> -Auflistung, die mithilfe der Servername, Benutzername und Kennwort einer Instanz von SQL Server, innerhalb des angegebenen logischen Ordners gespeicherten Pakete enthält.</summary>
        <returns>Die Auflistung, in der die Pakete enthalten sind.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPackageRoles">
      <MemberSignature Language="C#" Value="public void GetPackageRoles (string serverName, string packagePath, out string readerRole, out string writerRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetPackageRoles(string serverName, string packagePath, string readerRole, string writerRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.GetPackageRoles(System.String,System.String,System.String@,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="packagePath" Type="System.String" />
        <Parameter Name="readerRole" Type="System.String&amp;" RefType="out" />
        <Parameter Name="writerRole" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="serverName">Gibt den Namen und die Instanz des Servers an, der das Paket enthält.</param>
        <param name="packagePath">Gibt den Namen des Pakets an.</param>
        <param name="readerRole">Gibt die Rollen mit Lesezugriff zurück.</param>
        <param name="writerRole">Gibt die Rollen mit Schreibzugriff zurück.</param>
        <summary>Gibt die Datenbankrollen zurück, die Lese- und Schreibzugriff auf das Paket gewähren. Datenbankrollen gelten nur für Pakete, die in der Msdb-Datenbank von SQL Server gespeichert.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunningPackages">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.RunningPackages GetRunningPackages (string server);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.SqlServer.Dts.Runtime.RunningPackages GetRunningPackages(string server) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.GetRunningPackages(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.RunningPackages</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="server">Die Instanz von SQL Server, die die Anwendung ausgeführt wird.</param>
        <summary>Gibt eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackages" /> Sammlung mit <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackage" /> Objekte. Diese Eigenschaft ist schreibgeschützt.</summary>
        <returns>Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackages" /> Sammlung mit den <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackage" /> Objekte, die alle Pakete darstellen, die derzeit auf dem Computer ausgeführt werden.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerInfo">
      <MemberSignature Language="C#" Value="public void GetServerInfo (string server, out string serverVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetServerInfo(string server, string serverVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.GetServerInfo(System.String,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="serverVersion" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="server">Der Name der Serverhardware zum Überprüfen der SQL Server-Produktversion.</param>
        <param name="serverVersion">Die Versionsnummer des SQL Server-Produkts, als Ausgabeparameter definiert.</param>
        <summary>Gibt die SQL Server-Versionsnummer des auf dem Zielserver installierten SQL Server-Produkts zurück. </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerVersionEx">
      <MemberSignature Language="C#" Value="public void GetServerVersionEx (string server, out int editionID, out Microsoft.SqlServer.Dts.Runtime.DTSProductLevel ssisEditionID, out string productVersion, out string productLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetServerVersionEx(string server, int32 editionID, valuetype Microsoft.SqlServer.Dts.Runtime.DTSProductLevel ssisEditionID, string productVersion, string productLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.GetServerVersionEx(System.String,System.Int32@,Microsoft.SqlServer.Dts.Runtime.DTSProductLevel@,System.String@,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="editionID" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="ssisEditionID" Type="Microsoft.SqlServer.Dts.Runtime.DTSProductLevel&amp;" RefType="out" />
        <Parameter Name="productVersion" Type="System.String&amp;" RefType="out" />
        <Parameter Name="productLevel" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="server">Der Name des Servers, von dem die Informationen zur Produktversion abgerufen werden sollen.</param>
        <param name="editionID">Ein Ausgabeparameter, enthält eine ganze Zahl, die die Edition des Produkts angibt. Die Zuordnung der <paramref name="editionID" /> für die Edition-Name wird im Abschnitt "Hinweise" angezeigt.</param>
        <param name="ssisEditionID">Ein Ausgabeparameter, enthält einen Wert aus der <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSProductLevel" /> Enumeration.</param>
        <param name="productVersion">Ein Ausgabeparameter, der die Buildnummer enthält formatiert wie in der Hilfe / Info, Hauptversion.Nebenversion.Build an. </param>
        <param name="productLevel">Ein Ausgabeparameter, der die Service Pack-Ebene des SSIS-Servers bereitstellt.</param>
        <summary>Gibt die Edition, Produktebene und andere Werte zurück, die die installierte SSIS-Version angeben.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromDtsServer">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.Package LoadFromDtsServer (string sPackagePath, string sServerName, Microsoft.SqlServer.Dts.Runtime.IDTSEvents pEvents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.SqlServer.Dts.Runtime.Package LoadFromDtsServer(string sPackagePath, string sServerName, class Microsoft.SqlServer.Dts.Runtime.IDTSEvents pEvents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.LoadFromDtsServer(System.String,System.String,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sPackagePath" Type="System.String" />
        <Parameter Name="sServerName" Type="System.String" />
        <Parameter Name="pEvents" Type="Microsoft.SqlServer.Dts.Runtime.IDTSEvents" />
      </Parameters>
      <Docs>
        <param name="sPackagePath">Der vollqualifizierte Pfad des Pakets.</param>
        <param name="sServerName">Der Server, auf dem das Paket gespeichert ist.</param>
        <param name="pEvents">Eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents" /> Schnittstelle.</param>
        <summary>Lädt ein Paket vom angegebenen Server.</summary>
        <returns>Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package" /> Objekt.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromSqlServer">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.Package LoadFromSqlServer (string packagePath, string serverName, string serverUserName, string serverPassword, Microsoft.SqlServer.Dts.Runtime.IDTSEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.SqlServer.Dts.Runtime.Package LoadFromSqlServer(string packagePath, string serverName, string serverUserName, string serverPassword, class Microsoft.SqlServer.Dts.Runtime.IDTSEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.LoadFromSqlServer(System.String,System.String,System.String,System.String,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packagePath" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="serverUserName" Type="System.String" />
        <Parameter Name="serverPassword" Type="System.String" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSEvents" />
      </Parameters>
      <Docs>
        <param name="packagePath">Der Name und Pfad des zu ladenden Pakets.</param>
        <param name="serverName">Der Name der SQL Server-Instanz, von der das Paket geladen wird.</param>
        <param name="serverUserName">Der für die Anmeldung beim Server verwendete Kontoname.</param>
        <param name="serverPassword">Das Kennwort des Kontos.</param>
        <param name="events">Eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents" /> Schnittstelle.</param>
        <summary>Lädt ein Paket unter Angabe von Servername, Benutzername und Kennwort aus SQL Server.</summary>
        <returns>Das Paket, das geladen wurde.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromSqlServer2">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.Package LoadFromSqlServer2 (string packagePath, object connectionObject, Microsoft.SqlServer.Dts.Runtime.IDTSEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.SqlServer.Dts.Runtime.Package LoadFromSqlServer2(string packagePath, object connectionObject, class Microsoft.SqlServer.Dts.Runtime.IDTSEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.LoadFromSqlServer2(System.String,System.Object,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packagePath" Type="System.String" />
        <Parameter Name="connectionObject" Type="System.Object" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSEvents" />
      </Parameters>
      <Docs>
        <param name="packagePath">Der Name und Pfad des zu ladenden Pakets.</param>
        <param name="connectionObject">Das Verbindungsobjekt.</param>
        <param name="events">Eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents" /> Schnittstelle.</param>
        <summary>Lädt ein Paket unter Angabe von Servername, Benutzername und Kennwort aus SQL Server.</summary>
        <returns>Das geladene Paket.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPackage">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.Package LoadPackage (string fileName, Microsoft.SqlServer.Dts.Runtime.IDTSEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.SqlServer.Dts.Runtime.Package LoadPackage(string fileName, class Microsoft.SqlServer.Dts.Runtime.IDTSEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.LoadPackage(System.String,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSEvents" />
      </Parameters>
      <Docs>
        <param name="fileName">Der Name der Datei, die das zu ladende Paket enthält.</param>
        <param name="events">Eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents" /> Schnittstelle.</param>
        <summary>Lädt <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package" /> aus dem Dateisystem.</summary>
        <returns>Das Paket, das geladen wurde.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPackage">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.Package LoadPackage (string fileName, Microsoft.SqlServer.Dts.Runtime.IDTSEvents events, bool loadNeutral);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.SqlServer.Dts.Runtime.Package LoadPackage(string fileName, class Microsoft.SqlServer.Dts.Runtime.IDTSEvents events, bool loadNeutral) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.LoadPackage(System.String,Microsoft.SqlServer.Dts.Runtime.IDTSEvents,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSEvents" />
        <Parameter Name="loadNeutral" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName">Der Name der Datei, die das zu ladende Paket enthält.</param>
        <param name="events">Eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents" /> Schnittstelle.</param>
        <param name="loadNeutral">Ein boolescher Wert, der angibt, ob das Paket als neutralthreadpaket geladen werden. Wenn "false" wird das Paket als apartmentthreadpaket geladen.</param>
        <summary>Lädt eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package" /> aus dem Dateisystem und gibt das Threadingmodell an.</summary>
        <returns>Das Paket, das geladen wurde.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogProviderInfos">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.LogProviderInfos LogProviderInfos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SqlServer.Dts.Runtime.LogProviderInfos LogProviderInfos" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Application.LogProviderInfos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.LogProviderInfos</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfos" /> Sammlung mit <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfo" /> Objekte. Diese Eigenschaft ist schreibgeschützt.</summary>
        <value>Ein <see cref="P:Microsoft.SqlServer.Dts.Runtime.Application.LogProviderInfos" /> Auflistung mit allen der <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfo" /> Objekte für die Anwendung. </value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PackagePassword">
      <MemberSignature Language="C#" Value="public string PackagePassword { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PackagePassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Application.PackagePassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Legt den Wert des Kennworts für das Paket fest. Diese Eigenschaft ist lesegeschützt.</summary>
        <value>Eine Zeichenfolge, die das Kennwort für das Paket enthält.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PackageUpgradeOptions">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.PackageUpgradeOptions PackageUpgradeOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SqlServer.Dts.Runtime.PackageUpgradeOptions PackageUpgradeOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Application.PackageUpgradeOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.PackageUpgradeOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, welche Upgradeoptionen während des Upgradevorgangs auf eine Auflistung von Integration Services-Paketen angewendet werden, oder legt ihn fest.</summary>
        <value>Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageUpgradeOptions" /> Objekt.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PipelineComponentInfos">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfos PipelineComponentInfos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfos PipelineComponentInfos" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Application.PipelineComponentInfos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfos</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfos" /> Sammlung mit <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo" /> Objekte.</summary>
        <value>Ein <see cref="P:Microsoft.SqlServer.Dts.Runtime.Application.PipelineComponentInfos" /> Auflistung mit allen der <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo" /> Objekte für die Anwendung. Diese Eigenschaft ist schreibgeschützt.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFolderFromDtsServer">
      <MemberSignature Language="C#" Value="public void RemoveFolderFromDtsServer (string sFolderName, string sServerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveFolderFromDtsServer(string sFolderName, string sServerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.RemoveFolderFromDtsServer(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sFolderName" Type="System.String" />
        <Parameter Name="sServerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sFolderName">Der Name des zu entfernenden Ordners.</param>
        <param name="sServerName">Der Name des Servers, auf dem sich der Ordner befindet.</param>
        <summary>Entfernt den angegebenen Ordner vom angegebenen Server.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFolderFromSqlServer">
      <MemberSignature Language="C#" Value="public void RemoveFolderFromSqlServer (string strFolderName, string strServerName, string strServerUserName, string strServerPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveFolderFromSqlServer(string strFolderName, string strServerName, string strServerUserName, string strServerPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.RemoveFolderFromSqlServer(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strFolderName" Type="System.String" />
        <Parameter Name="strServerName" Type="System.String" />
        <Parameter Name="strServerUserName" Type="System.String" />
        <Parameter Name="strServerPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strFolderName">Der Name des zu löschenden Ordners.</param>
        <param name="strServerName">Der Name der SQL Server-Instanz, aus der der Ordner entfernt werden soll.</param>
        <param name="strServerUserName">Der für die SQL Server-Instanz zu authentifizierende Benutzername.</param>
        <param name="strServerPassword">Das Kennwort für den angegebenen <paramref name="strServerUserName" />.</param>
        <summary>Entfernt den angegebenen Ordner aus der angegebenen SQL Server-Instanz.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromDtsServer">
      <MemberSignature Language="C#" Value="public void RemoveFromDtsServer (string sPackagePath, string sServerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveFromDtsServer(string sPackagePath, string sServerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.RemoveFromDtsServer(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sPackagePath" Type="System.String" />
        <Parameter Name="sServerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sPackagePath">Der vollqualifizierte Pfad des Pakets.</param>
        <param name="sServerName">Der Name des Servers, auf dem sich das Paket befindet.</param>
        <summary>Entfernt ein Paket vom angegebenen Server.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromSqlServer">
      <MemberSignature Language="C#" Value="public void RemoveFromSqlServer (string packagePath, string serverName, string serverUserName, string serverPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveFromSqlServer(string packagePath, string serverName, string serverUserName, string serverPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.RemoveFromSqlServer(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packagePath" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="serverUserName" Type="System.String" />
        <Parameter Name="serverPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packagePath">Der Name des zu entfernenden Pakets.</param>
        <param name="serverName">Der Name der SQL Server-Instanz.</param>
        <param name="serverUserName">Der beim Authentifizieren auf dem Server zu verwendende Benutzername.</param>
        <param name="serverPassword">Das dem <paramref name="serverUserName" />-Konto zugeordnete Kennwort.</param>
        <summary>Entfernt ein Paket aus der angegebenen SQL Server-Instanz.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameFolderOnDtsServer">
      <MemberSignature Language="C#" Value="public void RenameFolderOnDtsServer (string sParent, string sOldName, string sNewName, string sServerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RenameFolderOnDtsServer(string sParent, string sOldName, string sNewName, string sServerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.RenameFolderOnDtsServer(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sParent" Type="System.String" />
        <Parameter Name="sOldName" Type="System.String" />
        <Parameter Name="sNewName" Type="System.String" />
        <Parameter Name="sServerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sParent">Der Name des übergeordneten Ordners.</param>
        <param name="sOldName">Der Name des vorhandenen Ordners.</param>
        <param name="sNewName">Der neue Name des Ordners.</param>
        <param name="sServerName">Der Name des Servers, auf dem sich der Ordner befindet.</param>
        <summary>Benennt einen Ordner für die angegebene SQL Server-Instanz um.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameFolderOnSqlServer">
      <MemberSignature Language="C#" Value="public void RenameFolderOnSqlServer (string strParent, string strOldName, string strNewName, string strServerName, string strServerUserName, string strServerPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RenameFolderOnSqlServer(string strParent, string strOldName, string strNewName, string strServerName, string strServerUserName, string strServerPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.RenameFolderOnSqlServer(System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strParent" Type="System.String" />
        <Parameter Name="strOldName" Type="System.String" />
        <Parameter Name="strNewName" Type="System.String" />
        <Parameter Name="strServerName" Type="System.String" />
        <Parameter Name="strServerUserName" Type="System.String" />
        <Parameter Name="strServerPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strParent">Der Name des übergeordneten Ordners. </param>
        <param name="strOldName">Der Name des vorhandenen Ordners.</param>
        <param name="strNewName">Der neue Name des Ordners.</param>
        <param name="strServerName">Der Name der SQL Server-Instanz.</param>
        <param name="strServerUserName">Der beim Authentifizieren auf dem Server zu verwendende Benutzername.</param>
        <param name="strServerPassword">Das dem <paramref name="strServerUserName" />-Konto zugeordnete Kennwort.</param>
        <summary>Benennt einen Ordner für die angegebene SQL Server-Instanz um.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAndUpdateVersionToXml">
      <MemberSignature Language="C#" Value="public void SaveAndUpdateVersionToXml (string fileName, Microsoft.SqlServer.Dts.Runtime.Package package, Microsoft.SqlServer.Dts.Runtime.DTSTargetServerVersion newVersion, Microsoft.SqlServer.Dts.Runtime.IDTSEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAndUpdateVersionToXml(string fileName, class Microsoft.SqlServer.Dts.Runtime.Package package, valuetype Microsoft.SqlServer.Dts.Runtime.DTSTargetServerVersion newVersion, class Microsoft.SqlServer.Dts.Runtime.IDTSEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.SaveAndUpdateVersionToXml(System.String,Microsoft.SqlServer.Dts.Runtime.Package,Microsoft.SqlServer.Dts.Runtime.DTSTargetServerVersion,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="package" Type="Microsoft.SqlServer.Dts.Runtime.Package" />
        <Parameter Name="newVersion" Type="Microsoft.SqlServer.Dts.Runtime.DTSTargetServerVersion" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSEvents" />
      </Parameters>
      <Docs>
        <param name="fileName">
        </param>
        <param name="package">
        </param>
        <param name="newVersion">
        </param>
        <param name="events">
        </param>
        <summary />
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveToDtsServer">
      <MemberSignature Language="C#" Value="public void SaveToDtsServer (Microsoft.SqlServer.Dts.Runtime.Package pPackage, Microsoft.SqlServer.Dts.Runtime.IDTSEvents pEvents, string sPackagePath, string sServerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveToDtsServer(class Microsoft.SqlServer.Dts.Runtime.Package pPackage, class Microsoft.SqlServer.Dts.Runtime.IDTSEvents pEvents, string sPackagePath, string sServerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.SaveToDtsServer(Microsoft.SqlServer.Dts.Runtime.Package,Microsoft.SqlServer.Dts.Runtime.IDTSEvents,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pPackage" Type="Microsoft.SqlServer.Dts.Runtime.Package" />
        <Parameter Name="pEvents" Type="Microsoft.SqlServer.Dts.Runtime.IDTSEvents" />
        <Parameter Name="sPackagePath" Type="System.String" />
        <Parameter Name="sServerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pPackage">Das zu speichernde Paket.</param>
        <param name="pEvents">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents" /> Objekt.</param>
        <param name="sPackagePath">Der Name, unter dem das Paket gespeichert wird. Sie können dem Namen einen Pfad voranstellen. Beispielsweise, um ein Paket mit dem Namen MyPackage zu dem Ordner Dateisystem zu speichern, die Parameter wäre @"Datei System\myPackage".</param>
        <param name="sServerName">Der Name des Servers, auf dem das Paket gespeichert werden soll.</param>
        <summary>Speichert ein Paket im Dateisystem.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveToSqlServer">
      <MemberSignature Language="C#" Value="public void SaveToSqlServer (Microsoft.SqlServer.Dts.Runtime.Package package, Microsoft.SqlServer.Dts.Runtime.IDTSEvents events, string serverName, string serverUserName, string serverPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveToSqlServer(class Microsoft.SqlServer.Dts.Runtime.Package package, class Microsoft.SqlServer.Dts.Runtime.IDTSEvents events, string serverName, string serverUserName, string serverPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.SaveToSqlServer(Microsoft.SqlServer.Dts.Runtime.Package,Microsoft.SqlServer.Dts.Runtime.IDTSEvents,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="package" Type="Microsoft.SqlServer.Dts.Runtime.Package" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSEvents" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="serverUserName" Type="System.String" />
        <Parameter Name="serverPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="package">Das zu speichernde Paket.</param>
        <param name="events">Die <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents" /> Objekt.</param>
        <param name="serverName">Der Name der SQL Server-Instanz, in der das Paket gespeichert werden soll.</param>
        <param name="serverUserName">Der Benutzername, der für die Anmeldung beim Server verwendet wird.</param>
        <param name="serverPassword">Das Kennwort für das Benutzerkonto.</param>
        <summary>Speichert ein Paket in einer SQL Server-Instanz.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveToSqlServerAs">
      <MemberSignature Language="C#" Value="public void SaveToSqlServerAs (Microsoft.SqlServer.Dts.Runtime.Package package, Microsoft.SqlServer.Dts.Runtime.IDTSEvents events, string packagePath, string serverName, string serverUserName, string serverPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveToSqlServerAs(class Microsoft.SqlServer.Dts.Runtime.Package package, class Microsoft.SqlServer.Dts.Runtime.IDTSEvents events, string packagePath, string serverName, string serverUserName, string serverPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.SaveToSqlServerAs(Microsoft.SqlServer.Dts.Runtime.Package,Microsoft.SqlServer.Dts.Runtime.IDTSEvents,System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="package" Type="Microsoft.SqlServer.Dts.Runtime.Package" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSEvents" />
        <Parameter Name="packagePath" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="serverUserName" Type="System.String" />
        <Parameter Name="serverPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="package">Das zu speichernde Paket.</param>
        <param name="events">Die <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents" /> Objekt.</param>
        <param name="packagePath">Der Pfad und neue Name, der dem Paket zugewiesen werden soll. Der Parameter <paramref name="packagePath" /> weist das Format der \\Ordner\\PackageName. Wenn <paramref name="packagePath" /> angegeben ohne einen vorhandenen Ordner oder das Paket wird mit diesem Parameter als neuem Namen gespeichert werden. </param>
        <param name="serverName">Der Name der SQL Server-Instanz.</param>
        <param name="serverUserName">Der Name des für die Anmeldung bei der SQL Server-Instanz verwendeten Kontos.</param>
        <param name="serverPassword">Das Kennwort des Benutzerkontos.</param>
        <summary>Speichert ein Paket unter einem neuen Namen in einer SQL Server-Instanz.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveToXml">
      <MemberSignature Language="C#" Value="public void SaveToXml (string fileName, Microsoft.SqlServer.Dts.Runtime.Package package, Microsoft.SqlServer.Dts.Runtime.IDTSEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveToXml(string fileName, class Microsoft.SqlServer.Dts.Runtime.Package package, class Microsoft.SqlServer.Dts.Runtime.IDTSEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.SaveToXml(System.String,Microsoft.SqlServer.Dts.Runtime.Package,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="package" Type="Microsoft.SqlServer.Dts.Runtime.Package" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSEvents" />
      </Parameters>
      <Docs>
        <param name="fileName">Der Name der zu speichernden Datei.</param>
        <param name="package">Das zu speichernde Paketobjekt. </param>
        <param name="events">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents" /> Objekt.</param>
        <summary>Speichert die XML-Definition eines Pakets in einer Datei.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPackageRoles">
      <MemberSignature Language="C#" Value="public void SetPackageRoles (string serverName, string packagePath, string readerRole, string writerRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPackageRoles(string serverName, string packagePath, string readerRole, string writerRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.SetPackageRoles(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="packagePath" Type="System.String" />
        <Parameter Name="readerRole" Type="System.String" />
        <Parameter Name="writerRole" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serverName">Gibt den Namen und die Instanz des Servers an, der das Paket enthält.</param>
        <param name="packagePath">Gibt den Namen des Pakets an.</param>
        <param name="readerRole">Gibt an, dass eine Rolle über Lesezugriff verfügen soll.</param>
        <param name="writerRole">Gibt an, dass eine Rolle über Schreibzugriff verfügen soll.</param>
        <summary>Legt die Datenbankrollen fest, die Lese- und Schreibzugriff auf das Paket gewähren. Datenbankrollen gelten nur für in der Msdb-Datenbank von SQL Server gespeichertes Paket.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetServerVersion">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.DTSTargetServerVersion TargetServerVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Dts.Runtime.DTSTargetServerVersion TargetServerVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Application.TargetServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.DTSTargetServerVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary />
        <value>Muss hinzugefügt werden.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskInfos">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.TaskInfos TaskInfos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SqlServer.Dts.Runtime.TaskInfos TaskInfos" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Application.TaskInfos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.TaskInfos</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfos" /> Sammlung mit <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo" /> Objekte. Diese Eigenschaft ist schreibgeschützt.</summary>
        <value>Ein <see cref="P:Microsoft.SqlServer.Dts.Runtime.Application.TaskInfos" /> Auflistung mit allen der <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo" /> Objekte in der Anwendung. </value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateObjects">
      <MemberSignature Language="C#" Value="public bool UpdateObjects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UpdateObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Application.UpdateObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Element veraltet; finden Sie unter "Hinweise". Ruft ab oder legt einen booleschen Wert ab, der angibt, ob erweiterbare Objekte zur Ladezeit des Pakets aktualisiert werden können, wenn eine aktualisierte Version gefunden wird.</summary>
        <value>"true", wenn erweiterbare Objekte zur Ladezeit des Pakets aktualisiert werden können, wenn eine aktualisierte Version gefunden wird; andernfalls "false".</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatePackage">
      <MemberSignature Language="C#" Value="public bool UpdatePackage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UpdatePackage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Application.UpdatePackage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen booleschen Wert ab, der angibt, ob Pakete aktualisiert werden können, wenn eine aktualisierte Version gefunden wird.</summary>
        <value>"true", wenn Pakete aktualisiert werden können, wenn eine aktualisierte Version gefunden wird; andernfalls "false". Der Standardwert ist "false".</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.UpgradeResult Upgrade (System.Collections.Generic.IEnumerable&lt;Microsoft.SqlServer.Dts.Runtime.UpgradePackageInfo&gt; packages, Microsoft.SqlServer.Dts.Runtime.StorageInfo source, Microsoft.SqlServer.Dts.Runtime.StorageInfo destination, Microsoft.SqlServer.Dts.Runtime.BatchUpgradeOptions options, Microsoft.SqlServer.Dts.Runtime.IDTSEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.SqlServer.Dts.Runtime.UpgradeResult Upgrade(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.SqlServer.Dts.Runtime.UpgradePackageInfo&gt; packages, class Microsoft.SqlServer.Dts.Runtime.StorageInfo source, class Microsoft.SqlServer.Dts.Runtime.StorageInfo destination, class Microsoft.SqlServer.Dts.Runtime.BatchUpgradeOptions options, class Microsoft.SqlServer.Dts.Runtime.IDTSEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Application.Upgrade(System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Dts.Runtime.UpgradePackageInfo},Microsoft.SqlServer.Dts.Runtime.StorageInfo,Microsoft.SqlServer.Dts.Runtime.StorageInfo,Microsoft.SqlServer.Dts.Runtime.BatchUpgradeOptions,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.UpgradeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packages" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.SqlServer.Dts.Runtime.UpgradePackageInfo&gt;" />
        <Parameter Name="source" Type="Microsoft.SqlServer.Dts.Runtime.StorageInfo" />
        <Parameter Name="destination" Type="Microsoft.SqlServer.Dts.Runtime.StorageInfo" />
        <Parameter Name="options" Type="Microsoft.SqlServer.Dts.Runtime.BatchUpgradeOptions" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSEvents" />
      </Parameters>
      <Docs>
        <param name="packages">Die Auflistung zu aktualisierender Pakete.</param>
        <param name="source">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.StorageInfo" />-Objekt, das den Quellspeicherort für die Pakete angibt, die aktualisiert werden sollen.</param>
        <param name="destination">Das <see cref="T:Microsoft.SqlServer.Dts.Runtime.StorageInfo" />-Objekt, das den Zielspeicherort für die Pakete angibt, die aktualisiert werden sollen.</param>
        <param name="options">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.BatchUpgradeOptions" />-Objekt, das die Optionen angibt, die während des Upgradevorgangs auf die Pakete angewendet werden.</param>
        <param name="events">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents" /> Objekt.</param>
        <summary>Aktualisiert mindestens ein Integration Services-Paket aus einem angegebenen Quellspeicherort in einen angegebenen Zielspeicherort.</summary>
        <returns>Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.UpgradeResult" /> Objekt, das das upgradeergebnis für mindestens ein Paket angibt.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
