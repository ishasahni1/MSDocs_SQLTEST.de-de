<Type Name="LoggingOptions" FullName="Microsoft.SqlServer.Dts.Runtime.LoggingOptions">
  <TypeSignature Language="C#" Value="public sealed class LoggingOptions : Microsoft.SqlServer.Dts.Runtime.DtsObject, Microsoft.SqlServer.Dts.Runtime.IDTSPersist" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LoggingOptions extends Microsoft.SqlServer.Dts.Runtime.DtsObject implements class Microsoft.SqlServer.Dts.Runtime.IDTSPersist" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Dts.Runtime.LoggingOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.ManagedDTS</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SqlServer.Dts.Runtime.DtsObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.SqlServer.Dts.Runtime.IDTSPersist</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Enthält Elemente, die steuern, welche Informationen in die Protokollierung ein- bzw. daraus ausgeschlossen werden. Diese Klasse kann nicht vererbt werden. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EventFilter">
      <MemberSignature Language="C#" Value="public string[] EventFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] EventFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.LoggingOptions.EventFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array ab, das die Namen der Ereignisse enthält, auf die die Filteroptionen angewendet werden, oder legt es fest.</summary>
        <value>Ein Zeichenfolgenarray, das die Namen der Ereignisse enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventFilterKind">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.DTSEventFilterKind EventFilterKind { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Dts.Runtime.DTSEventFilterKind EventFilterKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.LoggingOptions.EventFilterKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.DTSEventFilterKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die Art der festgelegten eingeschlossenen oder ausgeschlossenen Ereignisfilter beschreibt, oder legt ihn fest.</summary>
        <value>Ein Wert aus der <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventFilterKind" />-Enumeration, der angibt, ob die Ereignisse, die <see cref="P:Microsoft.SqlServer.Dts.Runtime.LoggingOptions.EventFilter" /> hinzugefügt wurden, in das Ereignisprotokoll eingeschlossen oder daraus ausgeschlossen werden.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnFilter">
      <MemberSignature Language="C#" Value="public void GetColumnFilter (string eventName, ref Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter columnFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetColumnFilter(string eventName, valuetype Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter columnFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.LoggingOptions.GetColumnFilter(System.String,Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="columnFilter" Type="Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="eventName">Der Name des Ereignisses, dessen Spalten Sie steuern möchten.</param>
        <param name="columnFilter">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter" /> mit Werten festlegen auf "true" oder "false" abhängig, wenn die Spalte enthalten ist (True) oder ausgeschlossen (False).</param>
        <summary>Gibt den Spaltenfilter für das angegebene Ereignis zurück.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnFilteredEvents">
      <MemberSignature Language="C#" Value="public string[] GetColumnFilteredEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetColumnFilteredEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.LoggingOptions.GetColumnFilteredEvents" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein Zeichenfolgenarray zurück, das eine Liste der Ereignisse enthält, für die ein Spaltenfilter festgelegt wurde.</summary>
        <returns>Ein Zeichenfolgenarray, das die Ereignisse enthält, für die ein Spaltenfilter festgelegt wurde.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromXML">
      <MemberSignature Language="C#" Value="public void LoadFromXML (System.Xml.XmlNode node, Microsoft.SqlServer.Dts.Runtime.IDTSEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadFromXML(class System.Xml.XmlNode node, class Microsoft.SqlServer.Dts.Runtime.IDTSEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.LoggingOptions.LoadFromXML(System.Xml.XmlNode,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSEvents" />
      </Parameters>
      <Docs>
        <param name="node">Der Knoten, der die zu ladenden Informationen enthält.</param>
        <param name="events">Ein Objekt, implementiert die <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents" /> Schnittstelle zum Auslösen von Ereignissen (Fehlern, Warnungen usw.) während der Persistenz.</param>
        <summary>Diese Methode kann durch den Anwendungscode nicht aufgerufen werden. Um ein im XML-Format gespeichertes Paket zu laden, verwenden die <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.LoadPackage(System.String,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)" /> Methode.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveToXML">
      <MemberSignature Language="C#" Value="public void SaveToXML (ref System.Xml.XmlDocument doc, System.Xml.XmlNode node, Microsoft.SqlServer.Dts.Runtime.IDTSEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveToXML(class System.Xml.XmlDocument doc, class System.Xml.XmlNode node, class Microsoft.SqlServer.Dts.Runtime.IDTSEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.LoggingOptions.SaveToXML(System.Xml.XmlDocument@,System.Xml.XmlNode,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="doc" Type="System.Xml.XmlDocument&amp;" RefType="ref" />
        <Parameter Name="node" Type="System.Xml.XmlNode" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSEvents" />
      </Parameters>
      <Docs>
        <param name="doc">Das XML-Dokument, in dem die Informationen gespeichert werden sollen.</param>
        <param name="node">Der Knoten innerhalb des oben erwähnten Dokuments, in dem die Informationen gespeichert werden sollen.</param>
        <param name="events">Ein Objekt, implementiert die <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents" /> Schnittstelle.</param>
        <summary>Diese Methode kann durch den Anwendungscode nicht aufgerufen werden. Um ein Paket als XML-Datei zu speichern, verwenden die <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.SaveToXml(System.String,Microsoft.SqlServer.Dts.Runtime.Package,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)" /> Methode.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedLogProviders">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Runtime.SelectedLogProviders SelectedLogProviders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SqlServer.Dts.Runtime.SelectedLogProviders SelectedLogProviders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.LoggingOptions.SelectedLogProviders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.SelectedLogProviders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Auflistung der für den Container ausgewählten Protokollanbieter. Ein Protokollanbieter kann nur für einen Container ausgewählt werden bei der des Containers <see cref="P:Microsoft.SqlServer.Dts.Runtime.DtsContainer.LoggingMode" /> festgelegt ist, um <see cref="F:Microsoft.SqlServer.Dts.Runtime.DTSLoggingMode.Enabled" />.</summary>
        <value>Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.SelectedLogProviders" /> Auflistung.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColumnFilter">
      <MemberSignature Language="C#" Value="public void SetColumnFilter (string eventName, Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter columnFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnFilter(string eventName, valuetype Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter columnFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.LoggingOptions.SetColumnFilter(System.String,Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="columnFilter" Type="Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter" />
      </Parameters>
      <Docs>
        <param name="eventName">Der Name des Ereignisses, dessen Spalten Sie steuern möchten.</param>
        <param name="columnFilter">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter" /> mit Werten festlegen auf "true" oder "false", je nach Wunsch die Spalte eingeschlossen (True) oder ausgeschlossen (False).</param>
        <summary>Legt den Spaltenfilter für das angegebene Ereignis fest.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
