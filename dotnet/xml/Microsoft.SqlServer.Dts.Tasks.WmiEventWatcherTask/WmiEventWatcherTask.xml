<Type Name="WmiEventWatcherTask" FullName="Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask">
  <TypeSignature Language="C#" Value="public sealed class WmiEventWatcherTask : Microsoft.SqlServer.Dts.Runtime.Task, Microsoft.SqlServer.Dts.Runtime.IDTSBreakpointSite, Microsoft.SqlServer.Dts.Runtime.IDTSComponentPersist, Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.IWmiEventWatcherTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WmiEventWatcherTask extends Microsoft.SqlServer.Dts.Runtime.Task implements class Microsoft.SqlServer.Dts.Runtime.IDTSBreakpointSite, class Microsoft.SqlServer.Dts.Runtime.IDTSComponentPersist, class Microsoft.SqlServer.Dts.Runtime.IDTSSuspend, class Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.IWmiEventWatcherTask" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.WMIEWTask</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SqlServer.Dts.Runtime.Task</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.SqlServer.Dts.Runtime.IDTSBreakpointSite</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.SqlServer.Dts.Runtime.IDTSComponentPersist</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.IWmiEventWatcherTask</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.SqlServer.Dts.Runtime.DtsTask(HelpKeyword="sql13.dts.designer.wmieventwatchertask.F1", LocalizationType=typeof(Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.Localized), SamplesTag="SsisWmiEventWatcherTask", TaskContact="WMI Event Watcher Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1", TaskType="DTS90", UITypeName="Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTaskUI.WmiEventWatcherTaskUI, Microsoft.SqlServer.WMIEWTaskUI, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("8984C204-B19A-4EEC-9A66-C4329CB8A27F")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Enthält die zur Konfiguration und Ausführung eines Tasks "WMI-Ereignisüberwachung" verwendeten Elemente. Der Task führt WMI-Abfragen (Windows Management Instrumentation, Windows-Verwaltungsinstrumentation) aus und gibt WMI-Daten zu einem Computersystem zurück. Diese Klasse kann nicht vererbt werden.
            </summary>
    <remarks>Muss hinzugefügt werden.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiEventWatcherTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Muss hinzugefügt werden.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptBreakpointManager">
      <MemberSignature Language="C#" Value="public void AcceptBreakpointManager (Microsoft.SqlServer.Dts.Runtime.BreakpointManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptBreakpointManager(class Microsoft.SqlServer.Dts.Runtime.BreakpointManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.BreakpointManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="Microsoft.SqlServer.Dts.Runtime.BreakpointManager" />
      </Parameters>
      <Docs>
        <param name="manager">Die <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointManager" /> Verweis übergeben werden.</param>
        <summary>
            Übergibt einen <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointManager" />-Verweis an den <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask" />-Task. Diese Methode wird von der Laufzeit aufgerufen und wird nicht in Code verwendet.
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionAtEvent">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.ActionAtEvent ActionAtEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.ActionAtEvent ActionAtEvent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.ActionAtEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.ActionAtEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Bestimmt, wie <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask" /> reagiert, wenn der Task ein WMI-Ereignis empfängt.
            </summary>
        <value>Ein <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.ActionAtEvent" /> Wert. Der Standardwert lautet <see cref="F:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.ActionAtEvent.LogTheEventAndFireDTSEvent" />.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionAtTimeout">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.ActionAtTimeout ActionAtTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.ActionAtTimeout ActionAtTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.ActionAtTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.ActionAtTimeout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Bestimmt, wie die <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask" /> reagiert, wenn der Task ein Timeout eintritt, ohne dass das angegebene Windows-Verwaltungsinstrumentation (Windows Management Instrumentation, WMI)-Ereignis empfangen.
            </summary>
        <value>Ein <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.ActionAtTimeout" /> Wert. Der Standardwert lautet <see cref="F:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.ActionAtTimeout.LogTimeoutAndFireDTSEvent" />.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterEvent">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterEvent AfterEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterEvent AfterEvent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.AfterEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Bestimmt, wie die <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask" /> reagiert, wenn der Task das angegebene Windows-Verwaltungsinstrumentation (Windows Management Instrumentation, WMI)-Ereignis empfängt.
            </summary>
        <value>Ein <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterEvent" /> Wert. Der Standardwert lautet <see cref="F:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterEvent.ReturnWithSuccess" />.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterTimeout">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterTimeout AfterTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterTimeout AfterTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.AfterTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterTimeout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Bestimmt, wie die <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask" /> reagiert, wenn der Task ein Timeout eintritt, ohne dass das angegebene Windows-Verwaltungsinstrumentation (Windows Management Instrumentation, WMI)-Ereignis empfangen.
            </summary>
        <value>Ein <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterTimeout" /> Wert. Der Standardwert lautet <see cref="F:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterTimeout.ReturnWithFailure" />.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugMode">
      <MemberSignature Language="C#" Value="public bool DebugMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DebugMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.DebugMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Eine boolesche, der angibt, ob <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask" /> sollte überprüfen, ob Breakpoints aktiviert sind.
            </summary>
        <value>True, wenn die <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask" /> Task sollte eine Überprüfung auf aktivierte Breakpoints, andernfalls "false".</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override Microsoft.SqlServer.Dts.Runtime.DTSExecResult Execute (Microsoft.SqlServer.Dts.Runtime.Connections connections, Microsoft.SqlServer.Dts.Runtime.VariableDispenser variableDispenser, Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents events, Microsoft.SqlServer.Dts.Runtime.IDTSLogging log, object transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Microsoft.SqlServer.Dts.Runtime.DTSExecResult Execute(class Microsoft.SqlServer.Dts.Runtime.Connections connections, class Microsoft.SqlServer.Dts.Runtime.VariableDispenser variableDispenser, class Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents events, class Microsoft.SqlServer.Dts.Runtime.IDTSLogging log, object transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.Execute(Microsoft.SqlServer.Dts.Runtime.Connections,Microsoft.SqlServer.Dts.Runtime.VariableDispenser,Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents,Microsoft.SqlServer.Dts.Runtime.IDTSLogging,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.DTSExecResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connections" Type="Microsoft.SqlServer.Dts.Runtime.Connections" />
        <Parameter Name="variableDispenser" Type="Microsoft.SqlServer.Dts.Runtime.VariableDispenser" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents" />
        <Parameter Name="log" Type="Microsoft.SqlServer.Dts.Runtime.IDTSLogging" />
        <Parameter Name="transaction" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="connections">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.Connections" /> -Auflistung für den Task.</param>
        <param name="variableDispenser">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variables" /> -Auflistung für den Task.</param>
        <param name="events">Ein Verweis auf ein Objekt, implementiert die <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents" /> Schnittstelle zum Auslösen von Ereignissen. </param>
        <param name="log">Ein Verweis auf ein Objekt, das implementiert <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSLogging" />.</param>
        <param name="transaction">Das Transaktionsobjekt, zu dem der Task gehört, abhängig vom Wert in der TransactionOption-Eigenschaft. Dieser Wert kann auf einen NULL-Verweis (Nothing in Visual Basic) festgelegt werden.</param>
        <summary>
            Führt den Task aus.
            </summary>
        <returns>Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSExecResult" /> , der das Ergebnis der Ausführung angibt.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionValue">
      <MemberSignature Language="C#" Value="public override object ExecutionValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ExecutionValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.ExecutionValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft ein Objekt, das die Ergebnisse der enthält die <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask" /> Aufgabe.
            </summary>
        <value>Ein Objekt, das die Ergebnisse des Tasks enthält.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeTask">
      <MemberSignature Language="C#" Value="public override void InitializeTask (Microsoft.SqlServer.Dts.Runtime.Connections connections, Microsoft.SqlServer.Dts.Runtime.VariableDispenser variableDispenser, Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents events, Microsoft.SqlServer.Dts.Runtime.IDTSLogging log, Microsoft.SqlServer.Dts.Runtime.EventInfos eventInfos, Microsoft.SqlServer.Dts.Runtime.LogEntryInfos logEntryInfos, Microsoft.SqlServer.Dts.Runtime.ObjectReferenceTracker refTracker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeTask(class Microsoft.SqlServer.Dts.Runtime.Connections connections, class Microsoft.SqlServer.Dts.Runtime.VariableDispenser variableDispenser, class Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents events, class Microsoft.SqlServer.Dts.Runtime.IDTSLogging log, class Microsoft.SqlServer.Dts.Runtime.EventInfos eventInfos, class Microsoft.SqlServer.Dts.Runtime.LogEntryInfos logEntryInfos, class Microsoft.SqlServer.Dts.Runtime.ObjectReferenceTracker refTracker) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.InitializeTask(Microsoft.SqlServer.Dts.Runtime.Connections,Microsoft.SqlServer.Dts.Runtime.VariableDispenser,Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents,Microsoft.SqlServer.Dts.Runtime.IDTSLogging,Microsoft.SqlServer.Dts.Runtime.EventInfos,Microsoft.SqlServer.Dts.Runtime.LogEntryInfos,Microsoft.SqlServer.Dts.Runtime.ObjectReferenceTracker)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connections" Type="Microsoft.SqlServer.Dts.Runtime.Connections" />
        <Parameter Name="variableDispenser" Type="Microsoft.SqlServer.Dts.Runtime.VariableDispenser" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents" />
        <Parameter Name="log" Type="Microsoft.SqlServer.Dts.Runtime.IDTSLogging" />
        <Parameter Name="eventInfos" Type="Microsoft.SqlServer.Dts.Runtime.EventInfos" />
        <Parameter Name="logEntryInfos" Type="Microsoft.SqlServer.Dts.Runtime.LogEntryInfos" />
        <Parameter Name="refTracker" Type="Microsoft.SqlServer.Dts.Runtime.ObjectReferenceTracker" />
      </Parameters>
      <Docs>
        <param name="connections">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.Connections" /> -Auflistung für den Task.</param>
        <param name="variableDispenser">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.VariableDispenser" /> Objekt zum Sperren von Variablen.</param>
        <param name="events">Ein Objekt, implementiert die <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents" /> Schnittstelle zum Empfangen von Ereignissen.</param>
        <param name="log">Ein Objekt, implementiert die <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSLogging" /> Schnittstelle zum Protokollieren von Ereignissen.</param>
        <param name="eventInfos">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.EventInfos" /> Objekt.</param>
        <param name="logEntryInfos">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogEntryInfos" /> Objekt. </param>
        <param name="refTracker">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.ObjectReferenceTracker" /> Objekt.</param>
        <summary>
            Initialisiert die Eigenschaften für die <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask" /> Aufgabe. Diese Methode wird von der Laufzeit aufgerufen und wird nicht in Code verwendet.
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromXML">
      <MemberSignature Language="C#" Value="public void LoadFromXML (System.Xml.XmlElement rootNode, Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadFromXML(class System.Xml.XmlElement rootNode, class Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.LoadFromXML(System.Xml.XmlElement,Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootNode" Type="System.Xml.XmlElement" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents" />
      </Parameters>
      <Docs>
        <param name="rootNode">Das XML-Element, das die zu ladenden Informationen enthält.</param>
        <param name="events">Ein Objekt, das implementiert <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents" />.</param>
        <summary>
            Diese Methode kann durch den Anwendungscode nicht aufgerufen werden. Um ein im XML-Format gespeichertes Paket zu laden, verwenden die <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.LoadPackage(System.String,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)" /> Methode.
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfEvents">
      <MemberSignature Language="C#" Value="public int NumberOfEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfEvents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.NumberOfEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft die Anzahl der von <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask" /> zu überwachenden WMI-Ereignisse ab oder legt sie fest.
            </summary>
        <value>Eine ganze Zahl, die die Anzahl der für die der Task zu überwachenden WMI-Ereignisse enthält. Der Standardwert ist 1.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeExecution">
      <MemberSignature Language="C#" Value="public void ResumeExecution ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeExecution() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.ResumeExecution" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Setzt die Taskausführung nach einer Unterbrechung fort. Das Laufzeitmodul setzt die Ausführung des Tasks oder Containers fort. 
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveToXML">
      <MemberSignature Language="C#" Value="public void SaveToXML (System.Xml.XmlDocument doc, Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveToXML(class System.Xml.XmlDocument doc, class Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.SaveToXML(System.Xml.XmlDocument,Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="doc" Type="System.Xml.XmlDocument" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents" />
      </Parameters>
      <Docs>
        <param name="doc">Das XML-Dokument mit dem XML-Element, das den Task darstellt.</param>
        <param name="events">Ein Objekt, das implementiert <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents" />.</param>
        <summary>
            Diese Methode kann durch den Anwendungscode nicht aufgerufen werden. Um ein Paket als XML-Datei zu speichern, verwenden die <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.SaveToXml(System.String,Microsoft.SqlServer.Dts.Runtime.Package,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)" /> Methode.
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendExecution">
      <MemberSignature Language="C#" Value="public void SuspendExecution ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SuspendExecution() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.SuspendExecution" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gibt an, dass das ausführbare Element angehalten werden muss. Diese Methode wird vom Laufzeitmodul aufgerufen.
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendRequired">
      <MemberSignature Language="C#" Value="public bool SuspendRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuspendRequired" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.SuspendRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft ab oder legt einen booleschen Wert ab, der angibt, ob die Taskausführung sollte bei Erreichen eines Haltepunkts. Dieser Wert wird vom Laufzeitmodul für Tasks und Container festgelegt, wenn ein Breakpoint erreicht wird.
            </summary>
        <value>"true", wenn die Taskausführung bei Erreichen eines Breakpoints.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SqlServer.Dts.Runtime.Localization.LocalizablePropertyDescription(typeof(Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.Localized), "TimeoutPropDesc")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft ab oder legt fest, wie viele Sekunden der Task auf ein WMI-Ereignis warten soll, bevor er ein Timeout verursacht.
            </summary>
        <value>Eine ganze Zahl, die mit der Anzahl der Sekunden der Task auf warten soll ein WMI-Ereignis aus, bevor ein Timeout verursacht. Wenn auf 0 (null) festgelegt ist, der Task unbegrenzt wartet. Der Standardwert ist 0 (null).</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override Microsoft.SqlServer.Dts.Runtime.DTSExecResult Validate (Microsoft.SqlServer.Dts.Runtime.Connections connections, Microsoft.SqlServer.Dts.Runtime.VariableDispenser variableDispenser, Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents events, Microsoft.SqlServer.Dts.Runtime.IDTSLogging log);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Microsoft.SqlServer.Dts.Runtime.DTSExecResult Validate(class Microsoft.SqlServer.Dts.Runtime.Connections connections, class Microsoft.SqlServer.Dts.Runtime.VariableDispenser variableDispenser, class Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents events, class Microsoft.SqlServer.Dts.Runtime.IDTSLogging log) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.Validate(Microsoft.SqlServer.Dts.Runtime.Connections,Microsoft.SqlServer.Dts.Runtime.VariableDispenser,Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents,Microsoft.SqlServer.Dts.Runtime.IDTSLogging)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.DTSExecResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connections" Type="Microsoft.SqlServer.Dts.Runtime.Connections" />
        <Parameter Name="variableDispenser" Type="Microsoft.SqlServer.Dts.Runtime.VariableDispenser" />
        <Parameter Name="events" Type="Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents" />
        <Parameter Name="log" Type="Microsoft.SqlServer.Dts.Runtime.IDTSLogging" />
      </Parameters>
      <Docs>
        <param name="connections">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.Connections" /> -Auflistung für den Task.</param>
        <param name="variableDispenser">Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.VariableDispenser" /> Objekt zum Sperren von Variablen.</param>
        <param name="events">Ein Objekt, implementiert die <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents" /> Schnittstelle zum Empfangen von Ereignissen.</param>
        <param name="log">Ein Objekt, implementiert die <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSLogging" /> Schnittstelle zum Protokollieren von Ereignissen.</param>
        <summary>
            Überprüft, ob der Task ordnungsgemäß konfiguriert ist.
            </summary>
        <returns>Ein Wert aus der <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSExecResult" /> , der das Ergebnis der Überprüfung angibt.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WmiConnection">
      <MemberSignature Language="C#" Value="public string WmiConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WmiConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.WmiConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft ab oder legt den Namen der der <see cref="T:Microsoft.SqlServer.Dts.ManagedConnections.WMIConn" /> Klasse, verwendet die <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask" /> Aufgabe.
            </summary>
        <value>Der Name des der <see cref="T:Microsoft.SqlServer.Dts.ManagedConnections.WMIConn" /> Klasse, die dem Task zugeordnet.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WqlQuerySource">
      <MemberSignature Language="C#" Value="public string WqlQuerySource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WqlQuerySource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.WqlQuerySource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft ab oder legt die Quelle der Windows Management Instrumentation Query Language (WQL)-Abfrage ausgeführt werden soll die <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask" />.
            </summary>
        <value>Eine Zeichenfolge, die die Quelle der WQL-Abfrage enthält.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WqlQuerySourceType">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.QuerySourceType WqlQuerySourceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.QuerySourceType WqlQuerySourceType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask.WqlQuerySourceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.QuerySourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft ab oder legt einen <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.QuerySourceType" /> Wert, der der Datenquellentyp bestimmt, wie z. B. dateiverbindung oder Variable, die Windows Management Instrumentation Query Language (WQL)-Abfrage ausgeführt werden soll die <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask" />.
            </summary>
        <value>Ein <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.QuerySourceType" /> Wert. Der Standardwert ist <see cref="F:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.QuerySourceType.DirectInput" />.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
