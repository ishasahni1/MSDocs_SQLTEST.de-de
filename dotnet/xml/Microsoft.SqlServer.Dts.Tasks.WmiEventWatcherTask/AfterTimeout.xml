<Type Name="AfterTimeout" FullName="Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterTimeout">
  <TypeSignature Language="C#" Value="public enum AfterTimeout" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AfterTimeout extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterTimeout" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.WMIEWTask</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            Bestimmt, wie die <see cref="T:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.WmiEventWatcherTask" /> reagiert, wenn der Task ein Timeout eintritt, ohne dass das angegebene Windows-Verwaltungsinstrumentation (Windows Management Instrumentation, WMI)-Ereignis empfangen.
            </summary>
    <remarks>Muss hinzugefügt werden.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ReturnWithFailure">
      <MemberSignature Language="C#" Value="ReturnWithFailure" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterTimeout ReturnWithFailure = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterTimeout.ReturnWithFailure" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterTimeout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Protokolliert, dass der Benutzer das Timeout als Fehler behandeln möchte, und wartet nicht länger auf das protokollierte Ereignis. Dies ist der Standardwert.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="ReturnWithSuccess">
      <MemberSignature Language="C#" Value="ReturnWithSuccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterTimeout ReturnWithSuccess = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterTimeout.ReturnWithSuccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterTimeout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Protokolliert, dass der Benutzer das Timeout als Erfolg behandeln möchte, und wartet nicht länger auf das protokollierte Ereignis.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="WatchfortheEventAgain">
      <MemberSignature Language="C#" Value="WatchfortheEventAgain" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterTimeout WatchfortheEventAgain = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterTimeout.WatchfortheEventAgain" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Tasks.WmiEventWatcherTask.AfterTimeout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Protokolliert, dass der Benutzer weiterhin auf das Ereignis warten möchte.
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>
