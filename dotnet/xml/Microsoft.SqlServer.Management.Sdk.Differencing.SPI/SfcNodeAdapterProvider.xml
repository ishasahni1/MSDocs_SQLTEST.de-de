<Type Name="SfcNodeAdapterProvider" FullName="Microsoft.SqlServer.Management.Sdk.Differencing.SPI.SfcNodeAdapterProvider">
  <TypeSignature Language="C#" Value="public abstract class SfcNodeAdapterProvider : Microsoft.SqlServer.Management.Sdk.Differencing.SPI.Provider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SfcNodeAdapterProvider extends System.Object implements class Microsoft.SqlServer.Management.Sdk.Differencing.SPI.Provider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Management.Sdk.Differencing.SPI.SfcNodeAdapterProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.Management.Sdk.Sfc</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.SqlServer.Management.Sdk.Differencing.SPI.Provider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Der Vergleichsalgorithmus werden die Diagramme mit Hilfe der ISimpleSfcNode gef端hrt. Das Objektmodell kann entweder direkt implementieren die Schnittstelle oder einen Wrapper zur端ck.
            
            If a graph to be compared natively implements ISimpleSfcNode, the
            node can be returned directly. Otherwise, a wrapper should 
            be returned.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SfcNodeAdapterProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Sdk.Differencing.SPI.SfcNodeAdapterProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGraphAdapter">
      <MemberSignature Language="C#" Value="public abstract Microsoft.SqlServer.Management.Sdk.Sfc.ISfcSimpleNode GetGraphAdapter (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.SqlServer.Management.Sdk.Sfc.ISfcSimpleNode GetGraphAdapter(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Sdk.Differencing.SPI.SfcNodeAdapterProvider.GetGraphAdapter(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.Sdk.Sfc.ISfcSimpleNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>
            Die Methode wird f端r den Stammknoten der Diagramme zu vergleichenden nur einmal aufgerufen.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGraphSupported">
      <MemberSignature Language="C#" Value="public abstract bool IsGraphSupported (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsGraphSupported(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Sdk.Differencing.SPI.SfcNodeAdapterProvider.IsGraphSupported(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>
            Gibt an, ob dieser Anbieter das angegebene Diagramm unterst端tzt. Wenn dies der Fall, gibt "true", "false" andernfalls.
            
            If true is returned, calls to GetGraphAdapter() must return a 
            valid non-null graph adapter.
            
            The method is called only once on the root node of each graph.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
