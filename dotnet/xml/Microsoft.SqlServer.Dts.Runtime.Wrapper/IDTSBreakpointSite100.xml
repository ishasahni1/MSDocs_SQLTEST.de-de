<Type Name="IDTSBreakpointSite100" FullName="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100">
  <TypeSignature Language="C#" Value="public interface IDTSBreakpointSite100 : Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSuspend100" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDTSBreakpointSite100 implements class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSuspend100" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.DTSRuntimeWrap</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSuspend100</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("EE1E4858-EAFE-441B-B6CA-662A7F3C961E")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(System.Runtime.InteropServices.TypeLibTypeFlags.FDual | System.Runtime.InteropServices.TypeLibTypeFlags.FDispatchable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiert die Interaktion zwischen der Integration Services-Laufzeitmodul und der Task zum Verfügbarmachen von Haltepunkten und zum Erstellen und Verwalten von benutzerdefinierten Haltepunkten an.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceptBreakpointManager">
      <MemberSignature Language="C#" Value="public void AcceptBreakpointManager (Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100 pBreakpointManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptBreakpointManager(class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100 pBreakpointManager) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pBreakpointManager" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100" />
      </Parameters>
      <Docs>
        <param name="pBreakpointManager">Der für diesen Task spezifische Breakpoint-Manager.</param>
        <summary>Übergibt eine <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100" /> einer Aufgabe. Der Task verwendet den Breakpoint-Manager, um Breakpoints zu erstellen, zu entfernen und um deren Status zu überprüfen. Diese Methode wird von der Laufzeit aufgerufen und wird nicht in Code verwendet.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugMode">
      <MemberSignature Language="C#" Value="public bool DebugMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DebugMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100.DebugMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen booleschen Wert ab, der angibt, ob ein Task überprüfen soll, ob Breakpoints aktiviert sind. </summary>
        <value>"true", wenn ein Task überprüfen soll, ob Breakpoints aktiviert sind; andernfalls "false".</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeExecution">
      <MemberSignature Language="C#" Value="public void ResumeExecution ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeExecution() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100.ResumeExecution" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt die Taskausführung nach einer Unterbrechung fort. Das Laufzeitmodul setzt die Ausführung des Tasks oder Containers fort. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendExecution">
      <MemberSignature Language="C#" Value="public void SuspendExecution ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SuspendExecution() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100.SuspendExecution" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt an, dass das ausführbare Element angehalten werden muss. Diese Methode wird vom Laufzeitmodul aufgerufen. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendRequired">
      <MemberSignature Language="C#" Value="public bool SuspendRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuspendRequired" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100.SuspendRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen booleschen Wert ab, der angibt, ob die Taskausführung sollte bei Erreichen eines Haltepunkts. Dieser Wert wird vom Laufzeitmodul für Tasks und Container festgelegt, wenn ein Breakpoint erreicht wird.</summary>
        <value>True, wenn der Task bei Erreichen eines Breakpoints angehalten wird, andernfalls false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
