<Type Name="IDTSDataTapConfiguration100" FullName="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTapConfiguration100">
  <TypeSignature Language="C#" Value="public interface IDTSDataTapConfiguration100" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDTSDataTapConfiguration100" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTapConfiguration100" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.DTSRuntimeWrap</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("7FF0BA4D-1558-43CA-8403-7F41257AF532")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(System.Runtime.InteropServices.TypeLibTypeFlags.FOleAutomation)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Methoden für die Bearbeitung einer Datenabzweigungskonfiguration bereit.</summary>
    <remarks>Muss hinzugefügt werden.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddTapPoint">
      <MemberSignature Language="C#" Value="public void AddTapPoint (string mainPipeIdentification, string pathIdentification, int maxRowCount, string FileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTapPoint(string mainPipeIdentification, string pathIdentification, int32 maxRowCount, string FileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTapConfiguration100.AddTapPoint(System.String,System.String,System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mainPipeIdentification" Type="System.String" />
        <Parameter Name="pathIdentification" Type="System.String" />
        <Parameter Name="maxRowCount" Type="System.Int32" />
        <Parameter Name="FileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mainPipeIdentification">Die Identifikationszeichenfolge des Datenflusstasks.</param>
        <param name="pathIdentification">Die Identifikationszeichenfolge des Datenflusspfads.</param>
        <param name="maxRowCount">Die maximale zulässige Anzahl abzurufender Zeilen. Wenn dieser Parameter negativ ist, werden alle Zeilen abgerufen.</param>
        <param name="FileName">Der Name der Datei zum Speichern der abgerufenen Daten.</param>
        <summary>Fügt einen Abrufpunkt mit der angegebenen Konfiguration hinzu.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestTapPointsByMainPipeID">
      <MemberSignature Language="C#" Value="public void RequestTapPointsByMainPipeID (string mainPipeIdentification, out string[] ppsaPathIdentification, out int[] ppsaMaxRowCount, out string[] ppsafileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestTapPointsByMainPipeID(string mainPipeIdentification, string[] ppsaPathIdentification, int32[] ppsaMaxRowCount, string[] ppsafileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTapConfiguration100.RequestTapPointsByMainPipeID(System.String,System.String[]@,System.Int32[]@,System.String[]@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mainPipeIdentification" Type="System.String" />
        <Parameter Name="ppsaPathIdentification" Type="System.String[]&amp;" RefType="out" />
        <Parameter Name="ppsaMaxRowCount" Type="System.Int32[]&amp;" RefType="out" />
        <Parameter Name="ppsafileName" Type="System.String[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="mainPipeIdentification">Die Identifikationszeichenfolge des abzurufenden Datenflusstasks.</param>
        <param name="ppsaPathIdentification">Enthält nach der Rückkehr dieser Methode ein Zeichenfolgenarray, das die Pfad-ID der Datenflusspfade darstellt. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <param name="ppsaMaxRowCount">Enthält nach der Rückkehr dieser Methode ein Array von ganzen Zahlen, das die maximal zulässige Anzahl von Zeilen darstellt, die aus den Datenflusspfaden abgerufen werden können. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <param name="ppsafileName">Enthält nach der Rückkehr dieser Methode ein Zeichenfolgenarray, das die Dateinamen zum Speichern der Abzweigungsdaten darstellt. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Ruft die Abrufpunkte für den angegebenen Datenflusstask ab.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateExecutingPackagesCount">
      <MemberSignature Language="C#" Value="public void UpdateExecutingPackagesCount (bool isStart, Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100 pEvents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateExecutingPackagesCount(bool isStart, class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100 pEvents) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTapConfiguration100.UpdateExecutingPackagesCount(System.Boolean,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isStart" Type="System.Boolean" />
        <Parameter Name="pEvents" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" />
      </Parameters>
      <Docs>
        <param name="isStart">"true", führen Sie den Parameter IsStart; andernfalls "false".</param>
        <param name="pEvents">Ein Objekt, das die <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" />-Ereignisschnittstelle zum Auslösen von Fehlern, Warnungen oder Informationsereignissen implementiert.</param>
        <summary>Aktualisiert die Anzahl der ausgeführten Pakete.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
