<Type Name="ConnectionManagerHttpClass" FullName="Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass">
  <TypeSignature Language="C#" Value="public class ConnectionManagerHttpClass : Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttp, Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ConnectionManagerHttpClass extends System.Object implements class Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttp, class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager100, class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.DTSRuntimeWrap</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttp</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("4B389077-E0B5-458F-BD63-5A6312121584")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(System.Runtime.InteropServices.TypeLibTypeFlags.FCanCreate)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine http-Klasse des Verbindungs-Managers dar.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConnectionManagerHttpClass ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass" /> Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireConnection">
      <MemberSignature Language="C#" Value="public virtual object AcquireConnection (object pTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AcquireConnection(object pTransaction) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.AcquireConnection(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTransaction" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pTransaction">Das Handle für einen Transaktionstyp.</param>
        <summary>Erstellt eine Instanz des Verbindungstyps.</summary>
        <returns>Ein Objekt, das die Transaktionsverbindung enthält.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="C#" Value="public virtual bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.BypassProxyOnLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen booleschen Wert ab, der angibt, ob der Proxyserver für lokale Adressen umgangen werden soll, oder legt ihn fest.</summary>
        <value>"true", um den Proxyserver für lokale Adressen umgehen; andernfalls "false".</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public virtual byte[] Certificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Certificate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das für die Verbindung zu verwendende Zertifikat ab oder legt es fest.</summary>
        <value>Das für die Verbindung zu verwendende Zertifikat.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CertificateIdentifier { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CertificateIdentifier" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.CertificateIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Bezeichner des Zertifikats ab oder legt ihn fest.</summary>
        <value>Der Zertifikatsbezeichner.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChunkSize">
      <MemberSignature Language="C#" Value="public virtual int ChunkSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChunkSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ChunkSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der die Mindestanzahl von Bytes angibt, die während eines Lese-/Schreibvorgangs vom Server abgerufen oder an ihn gesendet werden, oder legt ihn fest.</summary>
        <value>Die Mindestanzahl abzurufender oder zu sendender Bytes.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public virtual string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die zum Herstellen einer Verbindung mit einer Datenquelle verwendete Verbindungszeichenfolge ab oder legt sie fest.</summary>
        <value>Die zum Herstellen einer Verbindung mit einer Datenquelle verwendete Verbindungszeichenfolge.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public virtual Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Verschlüsselungsebene ab, die auf sensible, im Paket enthaltene Daten angewendet wird, oder legt sie fest.</summary>
        <value>Ein <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel" /> Enumeration.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyBypassList">
      <MemberSignature Language="C#" Value="public virtual string[] ProxyBypassList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ProxyBypassList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ProxyBypassList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Adressen ab, die keinen Proxyserver verwenden, oder legt sie fest.</summary>
        <value>Die Adressen, die keinen Proxyserver verwenden.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyDomain">
      <MemberSignature Language="C#" Value="public virtual string ProxyDomain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProxyDomain" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ProxyDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Domäneneinstellung ab, die zur Anmeldung beim Proxy verwendet wird, oder legt sie fest.</summary>
        <value>Die Domäneneinstellung, die zur Anmeldung beim Proxy verwendet wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyPassword">
      <MemberSignature Language="C#" Value="public virtual string ProxyPassword { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProxyPassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ProxyPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Legt das Kennwort fest, das zur Anmeldung beim Proxy verwendet wird.</summary>
        <value>Das Kennwort, das zur Anmeldung beim Proxy verwendet wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyURL">
      <MemberSignature Language="C#" Value="public virtual string ProxyURL { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProxyURL" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ProxyURL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL ab, die die Adresse der Verbindung angibt, oder legt sie fest.</summary>
        <value>Die URL, die die Adresse der Verbindung angibt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyUserName">
      <MemberSignature Language="C#" Value="public virtual string ProxyUserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProxyUserName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ProxyUserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Benutzernamen ab, der zur Anmeldung beim Proxy verwendet wird, oder legt ihn fest.</summary>
        <value>Der Benutzername, der zur Anmeldung beim Proxy verwendet wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseConnection">
      <MemberSignature Language="C#" Value="public virtual void ReleaseConnection (object varConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseConnection(object varConnection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ReleaseConnection(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varConnection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="varConnection">Die freizugebende Verbindung.</param>
        <summary>Gibt die während der hergestellte Verbindung frei <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.AcquireConnection(System.Object)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public virtual Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConnectionManagerScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConnectionManagerScope Scope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConnectionManagerScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Bereich für die Verbindung ab oder legt ihn fest.</summary>
        <value>Der Bereich für die Verbindung.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerDomain">
      <MemberSignature Language="C#" Value="public virtual string ServerDomain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerDomain" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ServerDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Domäne ab, die zur Anmeldung beim Server verwendet wird, oder legt sie fest.</summary>
        <value>Die Domäne, die zur Anmeldung beim Server verwendet wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerPassword">
      <MemberSignature Language="C#" Value="public virtual string ServerPassword { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerPassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ServerPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Legt das Kennwort fest, das zur Anmeldung beim Server verwendet wird.</summary>
        <value>Das Kennwort, das zur Anmeldung beim Server verwendet wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerURL">
      <MemberSignature Language="C#" Value="public virtual string ServerURL { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerURL" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ServerURL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Server-URL für die Verbindung ab oder legt sie fest.</summary>
        <value>Die Server-URL für die Verbindung.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerUserName">
      <MemberSignature Language="C#" Value="public virtual string ServerUserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerUserName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ServerUserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Benutzernamen ab, der zur Anmeldung beim Server verwendet wird, oder legt ihn fest.</summary>
        <value>Der Benutzername, der für die Anmeldung beim Server verwendet wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetQualifier">
      <MemberSignature Language="C#" Value="public virtual void SetQualifier (string bstrQualifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetQualifier(string bstrQualifier) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.SetQualifier(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bstrQualifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bstrQualifier">Der neue Qualifizierer, der für den Verbindungs-Manager festgelegt werden soll.</param>
        <summary>Ändert einen Qualifizierer für den Verbindungs-Manager, nachdem der Verbindungs-Manager erstellt wurde, aber bevor er in einem ausgeführten Paket verwendet wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDTCTransactions">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDTCTransactions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDTCTransactions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.SupportsDTCTransactions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Verbindung DTC-Transaktionen unterstützt.</summary>
        <value>"true", wenn die Verbindung DTC-Transaktionen unterstützt; andernfalls "false".</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public virtual int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Verbindungstimeout ab oder legt es fest.</summary>
        <value>Das Verbindungstimeout.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseProxy">
      <MemberSignature Language="C#" Value="public virtual bool UseProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseProxy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.UseProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Verbindung einen Proxy für Anforderungen verwendet, oder legt ihn fest.</summary>
        <value>"true", wenn die Verbindung einen Proxy für die Anforderung verwendet; andernfalls "false".</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseProxyCredentials">
      <MemberSignature Language="C#" Value="public virtual bool UseProxyCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseProxyCredentials" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.UseProxyCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Verbindung Proxyanmeldeinformationen verwendet, oder legt ihn fest.</summary>
        <value>"true", wenn die Verbindung Proxyanmeldeinformationen verwendet; andernfalls "false".</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSecureConnection">
      <MemberSignature Language="C#" Value="public virtual bool UseSecureConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSecureConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.UseSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob eine sichere Verbindung verwendet werden soll, oder legt ihn fest.</summary>
        <value>"true", um eine sichere Verbindung verwendet; andernfalls "false".</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseServerCredentials">
      <MemberSignature Language="C#" Value="public virtual bool UseServerCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseServerCredentials" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.UseServerCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen booleschen Wert ab, der angibt, ob die Verbindung Netzwerkanmeldeinformationen verwendet, oder legt ihn fest.</summary>
        <value>"true", wenn die Verbindung Netzwerkanmeldeinformationen verwendet; andernfalls "false".</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult Validate (Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100 pEvents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult Validate(class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100 pEvents) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pEvents" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" />
      </Parameters>
      <Docs>
        <param name="pEvents">Ein Objekt, das die <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" />-Ereignisschnittstelle zum Auslösen von Fehlern, Warnungen oder Informationsereignissen implementiert.</param>
        <summary>Überprüft die Verbindung und gibt eine Enumeration zurück, die die erfolgreiche Ausführung oder einen Fehler angibt.</summary>
        <returns>Einer der Werte der <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" />-Enumeration.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
