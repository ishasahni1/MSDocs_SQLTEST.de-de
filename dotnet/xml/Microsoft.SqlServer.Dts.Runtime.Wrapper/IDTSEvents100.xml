<Type Name="IDTSEvents100" FullName="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100">
  <TypeSignature Language="C#" Value="public interface IDTSEvents100" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDTSEvents100" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.DTSRuntimeWrap</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("5D3DE54E-2203-48ED-9C06-F72C8E10BD84")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(System.Runtime.InteropServices.TypeLibTypeFlags.FDual | System.Runtime.InteropServices.TypeLibTypeFlags.FDispatchable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Legt Methoden für die Ereignisse fest.</summary>
    <remarks>Muss hinzugefügt werden.</remarks>
  </Docs>
  <Members>
    <Member MemberName="OnBreakpointHit">
      <MemberSignature Language="C#" Value="public void OnBreakpointHit (Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100 pBreakpointSite, Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100 pBreakpointTarget);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnBreakpointHit(class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100 pBreakpointSite, class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100 pBreakpointTarget) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnBreakpointHit(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pBreakpointSite" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100" />
        <Parameter Name="pBreakpointTarget" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100" />
      </Parameters>
      <Docs>
        <param name="pBreakpointSite">Ein Objekt, implementiert die <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100" /> Schnittstelle.</param>
        <param name="pBreakpointTarget">Der spezifische Breakpoint im Paket.</param>
        <summary>Wird aufgerufen, wenn ein Breakpoint innerhalb eines Tasks erreicht wird.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCustomEvent">
      <MemberSignature Language="C#" Value="public void OnCustomEvent (Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100 pTaskHost, string EventName, string EventText, ref object[] ppsaArguments, string SubComponent, out bool pbFireAgain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCustomEvent(class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100 pTaskHost, string EventName, string EventText, object[] ppsaArguments, string SubComponent, bool pbFireAgain) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnCustomEvent(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100,System.String,System.String,System.Object[]@,System.String,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTaskHost" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100" />
        <Parameter Name="EventName" Type="System.String" />
        <Parameter Name="EventText" Type="System.String" />
        <Parameter Name="ppsaArguments" Type="System.Object[]&amp;" RefType="ref" />
        <Parameter Name="SubComponent" Type="System.String" />
        <Parameter Name="pbFireAgain" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pTaskHost">Der Task, der den aktuellen Task hostet.</param>
        <param name="EventName">Der Name des Ereignisses.</param>
        <param name="EventText">Der Text zur Beschreibung des Ereignisses.</param>
        <param name="ppsaArguments">Ein Array der Argumente, die an das Ereignis übergeben werden sollen.</param>
        <param name="SubComponent">Ein String-Wert, der weitere Details zur Ereignisquelle enthält.</param>
        <param name="pbFireAgain">Ein boolescher Wert, der Dies weist darauf hin soll weiterhin ausgelöst bzw. nicht mehr ausgelöst werden. Der Wert "true" gibt an, dass das Ereignis weiterhin ausgelöst werden soll.</param>
        <summary>Wird durch Tasks aufgerufen, um benutzerdefinierte Taskereignisse auszulösen.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public void OnError (Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject100 pSource, int ErrorCode, string SubComponent, string Description, string HelpFile, int HelpContext, string IDOfInterfaceWithError, out bool pbCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnError(class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject100 pSource, int32 ErrorCode, string SubComponent, string Description, string HelpFile, int32 HelpContext, string IDOfInterfaceWithError, bool pbCancel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnError(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject100,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pSource" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject100" />
        <Parameter Name="ErrorCode" Type="System.Int32" />
        <Parameter Name="SubComponent" Type="System.String" />
        <Parameter Name="Description" Type="System.String" />
        <Parameter Name="HelpFile" Type="System.String" />
        <Parameter Name="HelpContext" Type="System.Int32" />
        <Parameter Name="IDOfInterfaceWithError" Type="System.String" />
        <Parameter Name="pbCancel" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pSource">Die Fehlerquelle; das Objekt, das das Ereignis verursacht hat.</param>
        <param name="ErrorCode">Ein Integer-Wert, durch den die Fehlermeldung identifiziert wird. Dieser Bezeichner sollte eindeutig sein, wenn er mit dem <paramref name="source" />-Parameter kombiniert wird; daher sollte die Kombination aus <paramref name="source" /> und <paramref name="errorCode" /> eindeutig sein. Es wird jedoch nicht erwartet, dass <paramref name="errorCode" /> allein eindeutig ist.</param>
        <param name="SubComponent">Eine beliebige Zeichenfolge, durch die das Untermodul innerhalb einer Quelle identifiziert wird. Beispielsweise die Transformation in einem Pipelinetask.</param>
        <param name="Description">Der Text der Meldung.</param>
        <param name="HelpFile">Der Pfad zur Hilfedatei, die ausführliche Informationen enthält.</param>
        <param name="HelpContext">Der Bezeichner des Themas in der Hilfedatei.</param>
        <param name="IDOfInterfaceWithError">Eine Textdarstellung der GUID der Schnittstelle, die den Fehler verursacht hat.</param>
        <param name="pbCancel">"true", um den Fehler abzubrechen; andernfalls "false".</param>
        <summary>Wird durch einen Task oder Container bei einem Fehler aufgerufen.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExecutionStatusChanged">
      <MemberSignature Language="C#" Value="public void OnExecutionStatusChanged (Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100 pExec, Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecStatus newStatus, out bool pbFireAgain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnExecutionStatusChanged(class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100 pExec, valuetype Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecStatus newStatus, bool pbFireAgain) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnExecutionStatusChanged(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecStatus,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pExec" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100" />
        <Parameter Name="newStatus" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecStatus" />
        <Parameter Name="pbFireAgain" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pExec">Der Task, der das Ereignis auslöst.</param>
        <param name="newStatus">Der aktuelle Status der ausführbaren Datei.</param>
        <param name="pbFireAgain">Ein boolescher Wert, der Dies weist darauf hin soll weiterhin ausgelöst bzw. nicht mehr ausgelöst werden. Der Wert "true" gibt an, dass das Ereignis weiterhin ausgelöst werden soll.</param>
        <summary>Wird von einem Task oder Container aufgerufen, wenn sich deren Ausführungsstatus ändert.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInformation">
      <MemberSignature Language="C#" Value="public void OnInformation (Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject100 pSource, int InformationCode, string SubComponent, string Description, string HelpFile, int HelpContext, string IDOfInterfaceWithError, out bool pbFireAgain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnInformation(class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject100 pSource, int32 InformationCode, string SubComponent, string Description, string HelpFile, int32 HelpContext, string IDOfInterfaceWithError, bool pbFireAgain) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnInformation(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject100,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pSource" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject100" />
        <Parameter Name="InformationCode" Type="System.Int32" />
        <Parameter Name="SubComponent" Type="System.String" />
        <Parameter Name="Description" Type="System.String" />
        <Parameter Name="HelpFile" Type="System.String" />
        <Parameter Name="HelpContext" Type="System.Int32" />
        <Parameter Name="IDOfInterfaceWithError" Type="System.String" />
        <Parameter Name="pbFireAgain" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pSource">Die Fehlerquelle; das Objekt, das das Ereignis verursacht hat.</param>
        <param name="InformationCode">Ein Integer-Wert, durch den die Meldung identifiziert wird. Dieser Bezeichner sollte eindeutig sein, wenn er mit dem <paramref name="source" />-Parameter kombiniert wird; daher sollte die Kombination aus <paramref name="source" /> und <paramref name="informationCode" /> eindeutig sein. Es wird jedoch nicht erwartet, dass <paramref name="informationCode" /> allein eindeutig ist.</param>
        <param name="SubComponent">Eine beliebige Zeichenfolge, durch die das Untermodul innerhalb einer Quelle identifiziert wird. Beispielsweise die Transformation in einem Pipelinetask.</param>
        <param name="Description">Der Text der Meldung.</param>
        <param name="HelpFile">Der Pfad zur Hilfedatei, die ausführliche Informationen enthält.</param>
        <param name="HelpContext">Der Bezeichner des Themas in der Hilfedatei.</param>
        <param name="IDOfInterfaceWithError">Eine Textdarstellung der GUID der Schnittstelle, die den Fehler verursacht hat.</param>
        <param name="pbFireAgain">Ein boolescher Wert, der Dies weist darauf hin soll weiterhin ausgelöst bzw. nicht mehr ausgelöst werden. Der Wert "true" gibt an, dass das Ereignis weiterhin ausgelöst werden soll.</param>
        <summary>Wird aufgerufen, wenn der Task Informationen bereitstellen muss.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostExecute">
      <MemberSignature Language="C#" Value="public void OnPostExecute (Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100 pExec, ref bool pbFireAgain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPostExecute(class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100 pExec, bool pbFireAgain) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnPostExecute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pExec" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100" />
        <Parameter Name="pbFireAgain" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="pExec">Der Task, der als Nächstes ausgeführt werden soll.</param>
        <param name="pbFireAgain">Ein boolescher Wert, der Dies weist darauf hin soll weiterhin ausgelöst bzw. nicht mehr ausgelöst werden. Der Wert "true" gibt an, dass das Ereignis weiterhin ausgelöst werden soll.</param>
        <summary>Wird aufgerufen, unmittelbar nachdem die Ausführungslogik des Tasks beendet wurde. Dieses Ereignis wird durch einen Task oder Container ausgelöst, unmittelbar nachdem er ausgeführt wurde.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostValidate">
      <MemberSignature Language="C#" Value="public void OnPostValidate (Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100 pExec, ref bool pbFireAgain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPostValidate(class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100 pExec, bool pbFireAgain) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnPostValidate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pExec" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100" />
        <Parameter Name="pbFireAgain" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="pExec">Der Task, der das Ereignis auslöst.</param>
        <param name="pbFireAgain">Ein boolescher Wert, der Dies weist darauf hin soll weiterhin ausgelöst bzw. nicht mehr ausgelöst werden. Der Wert "true" gibt an, dass das Ereignis weiterhin ausgelöst werden soll.</param>
        <summary>Wird aufgerufen, unmittelbar nachdem die Überprüfungslogik des Tasks beendet wurde. Dieses Ereignis wird von einem Task ausgelöst, nachdem der Task überprüft wurde.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreExecute">
      <MemberSignature Language="C#" Value="public void OnPreExecute (Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100 pExec, ref bool pbFireAgain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPreExecute(class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100 pExec, bool pbFireAgain) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnPreExecute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pExec" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100" />
        <Parameter Name="pbFireAgain" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="pExec">Der Task, der als Nächstes ausgeführt werden soll.</param>
        <param name="pbFireAgain">Ein boolescher Wert, der Dies weist darauf hin soll weiterhin ausgelöst bzw. nicht mehr ausgelöst werden. Der Wert "true" gibt an, dass das Ereignis weiterhin ausgelöst werden soll.</param>
        <summary>Wird aufgerufen, unmittelbar bevor ein Task ausgeführt wird. Dieses Ereignis wird durch einen Task oder Container ausgelöst, unmittelbar bevor er ausgeführt wird.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreValidate">
      <MemberSignature Language="C#" Value="public void OnPreValidate (Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100 pExec, ref bool pbFireAgain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPreValidate(class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100 pExec, bool pbFireAgain) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnPreValidate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pExec" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100" />
        <Parameter Name="pbFireAgain" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="pExec">Der Task, für den die Methode aufgerufen wird.</param>
        <param name="pbFireAgain">Ein boolescher Wert, der Dies weist darauf hin soll weiterhin ausgelöst bzw. nicht mehr ausgelöst werden. Der Wert "true" gibt an, dass das Ereignis weiterhin ausgelöst werden soll.</param>
        <summary>Wird aufgerufen, sobald die tatsächliche Überprüfungslogik des Tasks gestartet wird. Dieses Ereignis wird ausgelöst, sobald die Überprüfung des Taskhosts oder Containers beginnt.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProgress">
      <MemberSignature Language="C#" Value="public void OnProgress (Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100 pTaskHost, string ProgressDescription, int PercentComplete, int ProgressCountLow, int ProgressCountHigh, string SubComponent, out bool pbFireAgain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnProgress(class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100 pTaskHost, string ProgressDescription, int32 PercentComplete, int32 ProgressCountLow, int32 ProgressCountHigh, string SubComponent, bool pbFireAgain) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnProgress(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTaskHost" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100" />
        <Parameter Name="ProgressDescription" Type="System.String" />
        <Parameter Name="PercentComplete" Type="System.Int32" />
        <Parameter Name="ProgressCountLow" Type="System.Int32" />
        <Parameter Name="ProgressCountHigh" Type="System.Int32" />
        <Parameter Name="SubComponent" Type="System.String" />
        <Parameter Name="pbFireAgain" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pTaskHost">Ein NULL-Wert.</param>
        <param name="ProgressDescription">Eine Zeichenfolge, die das ausgelöste Statusereignis beschreibt.</param>
        <param name="PercentComplete">Ein ganzzahliger Wert, mit dem angegeben wird, wie viel Prozent des Tasks abgeschlossen wurden.</param>
        <param name="ProgressCountLow">Ein ganzzahliger Wert, der die unteren 32 Bits der abgeschlossenen Einheiten enthält.</param>
        <param name="ProgressCountHigh">Ein ganzzahliger Wert, der die oberen 32 Bits der abgeschlossenen Einheiten enthält.</param>
        <param name="SubComponent">Eine Zeichenfolge, die weitere Details zur Ereignisquelle enthält.</param>
        <param name="pbFireAgain">Ein boolescher Wert, der Dies weist darauf hin soll weiterhin ausgelöst bzw. nicht mehr ausgelöst werden. Der Wert "true" gibt an, dass das Ereignis weiterhin ausgelöst werden soll.</param>
        <summary>Wird aufgerufen, um den Status der Taskausführung zu aktualisieren.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryCancel">
      <MemberSignature Language="C#" Value="public void OnQueryCancel (out bool pbCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnQueryCancel(bool pbCancel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnQueryCancel(System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbCancel" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbCancel">"true", um die Abfrage abzubrechen; andernfalls "false".</param>
        <summary>Gibt eine Methode an, die an jedem Punkt der Taskverarbeitung aufgerufen wird, an dem ein Abbruch der Ausführung sinnvoll ist. Dieses Ereignis wird von Tasks und Containern ausgelöst, um zu bestimmen, ob ihre Ausführung beendet werden soll.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTaskFailed">
      <MemberSignature Language="C#" Value="public void OnTaskFailed (Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100 pTaskHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTaskFailed(class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100 pTaskHost) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnTaskFailed(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTaskHost" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100" />
      </Parameters>
      <Docs>
        <param name="pTaskHost">Die <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost" /> -Objekt, das Fehler.</param>
        <summary>Wird durch den Taskhost bei einem Fehler aufgerufen.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVariableValueChanged">
      <MemberSignature Language="C#" Value="public void OnVariableValueChanged (Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100 pContainer, Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100 pVariable, out bool pbFireAgain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnVariableValueChanged(class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100 pContainer, class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100 pVariable, bool pbFireAgain) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnVariableValueChanged(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pContainer" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" />
        <Parameter Name="pVariable" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100" />
        <Parameter Name="pbFireAgain" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pContainer">Der Task.</param>
        <param name="pVariable">Die geänderte Variable.</param>
        <param name="pbFireAgain">Ein boolescher Wert, der Dies weist darauf hin soll weiterhin ausgelöst bzw. nicht mehr ausgelöst werden. Der Wert "true" gibt an, dass das Ereignis weiterhin ausgelöst werden soll.</param>
        <summary>Wird vom Laufzeitmodul aufgerufen. Wird nicht von Tasks aufgerufen.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWarning">
      <MemberSignature Language="C#" Value="public void OnWarning (Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject100 pSource, int WarningCode, string SubComponent, string Description, string HelpFile, int HelpContext, string IDOfInterfaceWithError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWarning(class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject100 pSource, int32 WarningCode, string SubComponent, string Description, string HelpFile, int32 HelpContext, string IDOfInterfaceWithError) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnWarning(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject100,System.Int32,System.String,System.String,System.String,System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pSource" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject100" />
        <Parameter Name="WarningCode" Type="System.Int32" />
        <Parameter Name="SubComponent" Type="System.String" />
        <Parameter Name="Description" Type="System.String" />
        <Parameter Name="HelpFile" Type="System.String" />
        <Parameter Name="HelpContext" Type="System.Int32" />
        <Parameter Name="IDOfInterfaceWithError" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pSource">Das Objekt, durch das das Ereignis verursacht wurde.</param>
        <param name="WarningCode">Ein Integer-Wert, durch den die Warnmeldung identifiziert wird. Dieser Bezeichner sollte eindeutig sein, wenn er mit dem <paramref name="source" />-Parameter kombiniert wird; daher sollte die Kombination aus <paramref name="source" /> und <paramref name="warningCode" /> eindeutig sein. Es wird jedoch nicht erwartet, dass <paramref name="warningCode" /> allein eindeutig ist.</param>
        <param name="SubComponent">Eine beliebige Zeichenfolge, durch die das Untermodul innerhalb einer Quelle identifiziert wird. Beispielsweise die Transformation in einem Pipelinetask.</param>
        <param name="Description">Der Text der Meldung.</param>
        <param name="HelpFile">Der Pfad zur Hilfedatei, die ausführliche Informationen enthält.</param>
        <param name="HelpContext">Der Bezeichner des Themas in der Hilfedatei.</param>
        <param name="IDOfInterfaceWithError">Eine Textdarstellung der GUID der Schnittstelle, die den Fehler verursacht hat.</param>
        <summary>Wird aufgerufen, sobald sich der Task in einem Zustand befindet, der keinen Fehler, aber eine Warnung des Clients rechtfertigt.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
