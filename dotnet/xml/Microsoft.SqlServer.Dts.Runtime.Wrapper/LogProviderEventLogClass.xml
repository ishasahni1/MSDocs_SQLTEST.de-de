<Type Name="LogProviderEventLogClass" FullName="Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass">
  <TypeSignature Language="C#" Value="public class LogProviderEventLogClass : Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100, Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSName100, Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi LogProviderEventLogClass extends System.Object implements class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100, class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider100, class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSName100, class Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLog" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.DTSRuntimeWrap</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSName100</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLog</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("6169E378-F8EF-499A-A52F-A26C1BB1357A")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(System.Runtime.InteropServices.TypeLibTypeFlags.FCanCreate)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Klasse für die <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLog" />-Schnittstelle dar.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogProviderEventLogClass ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass" /> Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseLog">
      <MemberSignature Language="C#" Value="public virtual void CloseLog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseLog() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.CloseLog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743811)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt das Protokoll.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigString">
      <MemberSignature Language="C#" Value="public virtual string ConfigString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.ConfigString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, mit der der Protokollanbieter konfiguriert wird, oder legt sie fest.</summary>
        <value>Eine Zeichenfolge, mit der der Protokollanbieter konfiguriert wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreationName">
      <MemberSignature Language="C#" Value="public virtual string CreationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreationName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.CreationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeichenfolge ab, die von der Laufzeit verwendet wird, um eine Instanz des Protokollanbieters zu erstellen.</summary>
        <value>Eine Zeichenfolge, die den Namen des Bezeichners (GUID) des Protokollanbieters enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Beschreibung des Protokollanbieters ab oder legt sie fest.</summary>
        <value>Die Beschreibung des Protokollanbieters.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Protokollanbieter aktiviert ist.</summary>
        <value>"true", wenn der Protokollanbieter aktiviert ist; andernfalls "false".</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilterStatus">
      <MemberSignature Language="C#" Value="public virtual bool[] GetFilterStatus (ref string[] EventNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool[] GetFilterStatus(string[] EventNames) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.GetFilterStatus(System.String[]@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EventNames" Type="System.String[]&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="EventNames">Das Ereignis, dessen Filterstatus für Sie von Interesse ist.</param>
        <summary>Ruft den Filterstatus der angegebenen Ereignisse ab.</summary>
        <returns>"true", wenn die angegebenen Ereignisse herausgefiltert werden; andernfalls "false".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public virtual string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Bezeichner des Protokollanbieters ab.</summary>
        <value>Der Bezeichner des Protokollanbieters.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public virtual void Log (string EventName, string Computer, string Operator, string SourceName, string SourceID, string ExecutionID, string MessageText, DateTime StartTime, DateTime EndTime, int DataCode, ref byte[] DataBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Log(string EventName, string Computer, string Operator, string SourceName, string SourceID, string ExecutionID, string MessageText, valuetype System.DateTime StartTime, valuetype System.DateTime EndTime, int32 DataCode, unsigned int8[] DataBytes) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.Log(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Byte[]@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EventName" Type="System.String" />
        <Parameter Name="Computer" Type="System.String" />
        <Parameter Name="Operator" Type="System.String" />
        <Parameter Name="SourceName" Type="System.String" />
        <Parameter Name="SourceID" Type="System.String" />
        <Parameter Name="ExecutionID" Type="System.String" />
        <Parameter Name="MessageText" Type="System.String" />
        <Parameter Name="StartTime" Type="System.DateTime" />
        <Parameter Name="EndTime" Type="System.DateTime" />
        <Parameter Name="DataCode" Type="System.Int32" />
        <Parameter Name="DataBytes" Type="System.Byte[]&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="EventName">Das Ereignis, durch das der Protokolleintrag aufgerufen wird.</param>
        <param name="Computer">Der lokale Computer.</param>
        <param name="Operator">Das Benutzerkonto.</param>
        <param name="SourceName">Das Objekt, das die Ereignisquelle darstellt.</param>
        <param name="SourceID">Der Bezeichner der Quelle.</param>
        <param name="ExecutionID">Der Bezeichner der speziellen Ausführung.</param>
        <param name="MessageText">Der in das Protokoll zu schreibende Text.</param>
        <param name="StartTime">Die Startzeit des Ereignisses.</param>
        <param name="EndTime">Die Beendigungszeit des Ereignisses.</param>
        <param name="DataCode">Das numerische Datenfeld.</param>
        <param name="DataBytes">Ein Bytearrayfeld für BLOBs (Binary Large Objects).</param>
        <summary>Schreibt den Protokolleintrag.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Protokollanbieters ab oder legt ihn fest.</summary>
        <value>Der Name des Protokollanbieters.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenLog">
      <MemberSignature Language="C#" Value="public virtual void OpenLog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenLog() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.OpenLog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743810)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Öffnet das Protokoll.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult Validate (Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100 pEvents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult Validate(class Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100 pEvents) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743812)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pEvents" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" />
      </Parameters>
      <Docs>
        <param name="pEvents">Ein Objekt, implementiert die <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> Schnittstelle.</param>
        <summary>Überprüft den Protokollanbieter mit den angegebenen Ereignissen.</summary>
        <returns>Ein Wert aus der <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> Enumeration.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
