<Type Name="IDTSManagedHelper100" FullName="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100">
  <TypeSignature Language="C#" Value="public interface IDTSManagedHelper100" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDTSManagedHelper100" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.DTSRuntimeWrap</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("141B0728-E09E-4F01-9E15-06CFC27D71D7")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(System.Runtime.InteropServices.TypeLibTypeFlags.FHidden | System.Runtime.InteropServices.TypeLibTypeFlags.FRestricted)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt eine Schnittstelle des verwalteten Hilfsprogramms an.</summary>
    <remarks>Muss hinzugefügt werden.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CloseManagedConnection">
      <MemberSignature Language="C#" Value="public void CloseManagedConnection (object pManagedConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseManagedConnection(object pManagedConnection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.CloseManagedConnection(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedConnection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedConnection">Die zu trennende Verbindung.</param>
        <summary>Trennt die angegebene Verbindung.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptDocument">
      <MemberSignature Language="C#" Value="public void DecryptDocument (out string pbstrDocument, string bstrPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DecryptDocument(string pbstrDocument, string bstrPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.DecryptDocument(System.String@,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbstrDocument" Type="System.String&amp;" RefType="out" />
        <Parameter Name="bstrPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pbstrDocument">Das zu entschlüsselnde Dokument.</param>
        <param name="bstrPassword">Das Kennwort des zu entschlüsselnden Dokuments.</param>
        <summary>Entschlüsselt das angegebene Dokument.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptDocument">
      <MemberSignature Language="C#" Value="public void EncryptDocument (out string pbstrDocument, string bstrPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EncryptDocument(string pbstrDocument, string bstrPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.EncryptDocument(System.String@,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbstrDocument" Type="System.String&amp;" RefType="out" />
        <Parameter Name="bstrPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pbstrDocument">Das zu verschlüsselnde Dokument.</param>
        <param name="bstrPassword">Das Kennwort des zu verschlüsselnden Dokuments.</param>
        <summary>Verschlüsselt ein angegebenes Dokument.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtensionMappingInfo">
      <MemberSignature Language="C#" Value="public bool GetExtensionMappingInfo (Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO_TYPE mitType, string pwszIdentifier, out Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EXTENSION_MAPPING_INFO pExtensionMappingInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetExtensionMappingInfo(valuetype Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO_TYPE mitType, string pwszIdentifier, valuetype Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EXTENSION_MAPPING_INFO pExtensionMappingInfo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.GetExtensionMappingInfo(Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO_TYPE,System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EXTENSION_MAPPING_INFO@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mitType" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO_TYPE" />
        <Parameter Name="pwszIdentifier" Type="System.String" />
        <Parameter Name="pExtensionMappingInfo" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EXTENSION_MAPPING_INFO&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="mitType">Der Typ des verwalteten Informationen</param>
        <param name="pwszIdentifier">Der Bezeichner.</param>
        <param name="pExtensionMappingInfo">Die Erweiterungszuordnungsinformationen</param>
        <summary>Ruft die Erweiterungszuordnungsinformationen ab</summary>
        <returns>Die Erweiterungszuordnungsinformationen</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtensionMappingInfoByCreationName">
      <MemberSignature Language="C#" Value="public bool GetExtensionMappingInfoByCreationName (string pwszCreationName, out Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EXTENSION_MAPPING_INFO pExtensionMappingInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetExtensionMappingInfoByCreationName(string pwszCreationName, valuetype Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EXTENSION_MAPPING_INFO pExtensionMappingInfo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.GetExtensionMappingInfoByCreationName(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EXTENSION_MAPPING_INFO@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pwszCreationName" Type="System.String" />
        <Parameter Name="pExtensionMappingInfo" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EXTENSION_MAPPING_INFO&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pwszCreationName">Der Erstellungsname.</param>
        <param name="pExtensionMappingInfo">Informationen zur Erweiterungszuordnung</param>
        <summary>Ruft die Informationen zur Erweiterungszuordnung mithilfe des Erstellungsnamens ab</summary>
        <returns>Die Erweiterungszuordnungsinformationen</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedConnection">
      <MemberSignature Language="C#" Value="public object GetManagedConnection (string bstrAssemblyQualifiedName, string bstrConnectionString, object pTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetManagedConnection(string bstrAssemblyQualifiedName, string bstrConnectionString, object pTransaction) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.GetManagedConnection(System.String,System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bstrAssemblyQualifiedName" Type="System.String" />
        <Parameter Name="bstrConnectionString" Type="System.String" />
        <Parameter Name="pTransaction" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bstrAssemblyQualifiedName">Der Name der qualifizierten Assembly.</param>
        <param name="bstrConnectionString">Verbindungszeichenfolge.</param>
        <param name="pTransaction">Die Verbindungstransaktion.</param>
        <summary>Gibt eine verwaltete Verbindung zurück.</summary>
        <returns>Eine verwaltete Verbindung.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextManagedInfo">
      <MemberSignature Language="C#" Value="public bool GetNextManagedInfo (out Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO pNextComponentInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetNextManagedInfo(valuetype Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO pNextComponentInfo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.GetNextManagedInfo(Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNextComponentInfo" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pNextComponentInfo">Die nächsten Komponenteninformationen.</param>
        <summary>Gibt an, ob die Verbindung die nächsten verwalteten Informationen abruft.</summary>
        <returns>"true", wenn die Verbindung die nächste verwaltete Informationen abruft; andernfalls "false".</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawCertData">
      <MemberSignature Language="C#" Value="public byte[] GetRawCertData (object pCertObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetRawCertData(object pCertObj) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.GetRawCertData(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pCertObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pCertObj">Die abzurufenden Zertifikatdaten.</param>
        <summary>Gibt die Rohdaten für das Zertifikat zurück.</summary>
        <returns>Ein <see cref="T:System.Byte" />, der die Zertifikatsdaten enthält.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeCertObject">
      <MemberSignature Language="C#" Value="public object MakeCertObject (long hCertContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MakeCertObject(int64 hCertContext) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.MakeCertObject(System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hCertContext" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="hCertContext">Der Zertifikatkontext.</param>
        <summary>Erstellt ein Zertifikatobjekt.</summary>
        <returns>Das erstellte Zertifikatobjekt.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenAssembly">
      <MemberSignature Language="C#" Value="public void OpenAssembly (string pwszAssemblyName, Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO_TYPE mitType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenAssembly(string pwszAssemblyName, valuetype Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO_TYPE mitType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.OpenAssembly(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO_TYPE)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pwszAssemblyName" Type="System.String" />
        <Parameter Name="mitType" Type="Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO_TYPE" />
      </Parameters>
      <Docs>
        <param name="pwszAssemblyName">Der Name der zu öffnenden Assembly.</param>
        <param name="mitType">Der Typ der verwalteten Informationen.</param>
        <summary>Öffnet eine Assembly.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignDocument">
      <MemberSignature Language="C#" Value="public void SignDocument (out string pbstrDocument, long hCertContext, string bstrKeyContainer, int iKeyNumber, string bstrProviderName, int iProviderType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignDocument(string pbstrDocument, int64 hCertContext, string bstrKeyContainer, int32 iKeyNumber, string bstrProviderName, int32 iProviderType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.SignDocument(System.String@,System.Int64,System.String,System.Int32,System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbstrDocument" Type="System.String&amp;" RefType="out" />
        <Parameter Name="hCertContext" Type="System.Int64" />
        <Parameter Name="bstrKeyContainer" Type="System.String" />
        <Parameter Name="iKeyNumber" Type="System.Int32" />
        <Parameter Name="bstrProviderName" Type="System.String" />
        <Parameter Name="iProviderType" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pbstrDocument">Das Dokument.</param>
        <param name="hCertContext">Der Zertifikatkontext.</param>
        <param name="bstrKeyContainer">Der Schlüsselcontainer.</param>
        <param name="iKeyNumber">Die Schlüsselnummer.</param>
        <param name="bstrProviderName">Der Name des Anbieters.</param>
        <param name="iProviderType">Der Anbietertyp.</param>
        <summary>Signiert das dem Hilfsprogramm zugeordnete Dokument.</summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyDocument">
      <MemberSignature Language="C#" Value="public bool VerifyDocument (string bstrDocument, out byte[] ppsaRawCertData, out byte[] ppsaSignerPublicKeyBlob);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyDocument(string bstrDocument, unsigned int8[] ppsaRawCertData, unsigned int8[] ppsaSignerPublicKeyBlob) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.VerifyDocument(System.String,System.Byte[]@,System.Byte[]@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bstrDocument" Type="System.String" />
        <Parameter Name="ppsaRawCertData" Type="System.Byte[]&amp;" RefType="out" />
        <Parameter Name="ppsaSignerPublicKeyBlob" Type="System.Byte[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bstrDocument">Das zu überprüfende Dokument.</param>
        <param name="ppsaRawCertData">Das Rohdatenzertifikat.</param>
        <param name="ppsaSignerPublicKeyBlob">Der öffentliche Schlüssel des Unterzeichners.</param>
        <summary>Gibt an, ob das Dokument überprüft wird.</summary>
        <returns>"true", wenn das Dokument überprüft wird; andernfalls "false".</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
