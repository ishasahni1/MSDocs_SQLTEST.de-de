<Type Name="EnumToDisplayNameConverter" FullName="Microsoft.SqlServer.Management.Smo.EnumToDisplayNameConverter">
  <TypeSignature Language="C#" Value="public abstract class EnumToDisplayNameConverter : System.ComponentModel.EnumConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EnumToDisplayNameConverter extends System.ComponentModel.EnumConverter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Management.Smo.EnumToDisplayNameConverter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.SqlEnum</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.EnumConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Konvertiert das angegebene Wertobjekt in ein Enumerationsobjekt.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EnumToDisplayNameConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Smo.EnumToDisplayNameConverter.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Smo.EnumToDisplayNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="sourceType">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Smo.EnumToDisplayNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Ein System.ComponentModel.ITypeDescriptorContext, der einen Formatierungskontext bereitstellt.</param>
        <param name="culture">Eine optionale System.Globalization.CultureInfo. Wenn nicht angegeben, wird die aktuelle Kultur angenommen.</param>
        <param name="value"> Die System.Object konvertieren.</param>
        <summary>
             Konvertiert das angegebene Wertobjekt in ein Enumerationsobjekt.
            </summary>
        <returns>Ein System.Object, das den konvertierten Wert darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.Smo.EnumToDisplayNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein System.ComponentModel.ITypeDescriptorContext, der einen Formatierungskontext bereitstellt.</param>
        <param name="culture">Eine optionale System.Globalization.CultureInfo. Wenn nicht angegeben, wird die aktuelle Kultur angenommen.</param>
        <param name="value">Die System.Object konvertieren.</param>
        <param name="destinationType">Die System.Type, den Wert zu konvertieren.</param>
        <summary>
            Konvertiert das angegebene Wertobjekt in den angegebenen Zieltyp.
            </summary>
        <returns>Ein System.Object, das den konvertierten Wert darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
