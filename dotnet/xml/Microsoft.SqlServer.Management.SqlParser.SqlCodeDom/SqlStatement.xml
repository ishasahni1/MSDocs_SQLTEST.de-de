<Type Name="SqlStatement" FullName="Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement">
  <TypeSignature Language="C#" Value="public abstract class SqlStatement : Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject, Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IVisitableSqlStatement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SqlStatement extends Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject implements class Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IVisitableSqlCodeObject, class Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IVisitableSqlStatement" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.Management.SqlParser</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IVisitableSqlStatement</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
             Basismethoden Accept für visitable SqlStatements überschreiben.
            
             Leaf classes in the hierarchy that are public and not abstract
             will accept their input visitor by invoking it.
            
             Leaf classes in the hierarchy that are private or internal
             will not implement this method. Most such classes will have
             a public ancestor in which case the ancestor's Accept method
             satisfies the interface. Therefore these classes are visitable as well.
            
             </summary>
    <summary>
            Stellt eine allgemeine Basisklasse für "eigenständig" Sql-Anweisungen bereit.
            </summary>
    <remarks>Muss hinzugefügt werden.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public abstract void Accept (Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Accept(class Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">Muss hinzugefügt werden.</param>
        <summary>
            Akzeptiert einen Besucher
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;C&gt;">
      <MemberSignature Language="C#" Value="public abstract void Accept&lt;C&gt; (Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor&lt;C&gt; visitor, C context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Accept&lt;C&gt;(class Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1&lt;!!C&gt; visitor, !!C context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="C" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor&lt;C&gt;" />
        <Parameter Name="context" Type="C" />
      </Parameters>
      <Docs>
        <typeparam name="C">Muss hinzugefügt werden.</typeparam>
        <param name="visitor">Muss hinzugefügt werden.</param>
        <param name="context">Muss hinzugefügt werden.</param>
        <summary>
            Akzeptiert einen Besucher
            </summary>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract T Accept&lt;T&gt; (Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor&lt;T&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T Accept&lt;T&gt;(class Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1&lt;!!T&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Muss hinzugefügt werden.</typeparam>
        <param name="visitor">Muss hinzugefügt werden.</param>
        <summary>
            Akzeptiert einen Besucher
            </summary>
        <returns>Muss hinzugefügt werden.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;T,C&gt;">
      <MemberSignature Language="C#" Value="public abstract T Accept&lt;T,C&gt; (Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor&lt;T,C&gt; visitor, C context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T Accept&lt;T, C&gt;(class Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2&lt;!!T, !!C&gt; visitor, !!C context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="C" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor&lt;T,C&gt;" />
        <Parameter Name="context" Type="C" />
      </Parameters>
      <Docs>
        <typeparam name="T">Muss hinzugefügt werden.</typeparam>
        <typeparam name="C">Muss hinzugefügt werden.</typeparam>
        <param name="visitor">Muss hinzugefügt werden.</param>
        <param name="context">Muss hinzugefügt werden.</param>
        <summary>
            Akzeptiert einen Besucher
            </summary>
        <returns>Muss hinzugefügt werden.</returns>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Statement">
      <MemberSignature Language="C#" Value="public override sealed Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement Statement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement Statement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.Statement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ruft die Anweisung, die das aktuelle umschließt <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject" />.
            </summary>
        <value>Muss hinzugefügt werden.</value>
        <remarks>Muss hinzugefügt werden.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
