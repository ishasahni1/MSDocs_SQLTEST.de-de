<Type Name="DacKeyVaultService" FullName="Microsoft.SqlServer.Dac.KeyVault.DacKeyVaultService">
  <TypeSignature Language="C#" Value="public sealed class DacKeyVaultService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DacKeyVaultService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Dac.KeyVault.DacKeyVaultService" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SqlServer.Dac</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Bietet einen Dienst zum Ermitteln und Konfigurieren einer <see cref="T:Microsoft.SqlServer.Dac.KeyVault.KeyVaultAuthenticator" /> schlüsseltresor Anforderungen zu verarbeiten.
Diese Anforderungen werden während der Bereitstellung auftreten, wenn eine verschlüsselte Tabelle geändert wird. Darüber hinaus unterstützt Initialisierung des Key Vault. allgemeine Unterstützung einer Anwendung
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BlockifMissingAuthentication">
      <MemberSignature Language="C#" Value="public bool BlockifMissingAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BlockifMissingAuthentication" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dac.KeyVault.DacKeyVaultService.BlockifMissingAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Bietet eine Möglichkeit, frühe Fehler festzulegen, wenn Azure Key Vault-Anbieters nicht eingerichtet ist.
Wenn dies zutrifft, Bereitstellung ein Fehler auftritt, starten, wenn es definiert ist, kein Anbieter entgegen Standardmodus können Sie die Bereitstellung durchlaufen, und schlägt fehl, nur wenn Schlüssel tatsächlich verwendet wird.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeAuthenticator">
      <MemberSignature Language="C#" Value="public void InitializeAuthenticator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitializeAuthenticator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dac.KeyVault.DacKeyVaultService.InitializeAuthenticator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Ermöglicht es der Authentifikator mit Core AlwaysEncrypted Aufrufstapel zu registrieren. Dies ist wichtig für Szenarien, in denen interaktive Authentifizierung verwendet wird, und dies ist der globale Authentifikator in der Anwendung verwendet werden
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Dac.KeyVault.DacKeyVaultService Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Dac.KeyVault.DacKeyVaultService Instance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Dac.KeyVault.DacKeyVaultService.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dac.KeyVault.DacKeyVaultService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Singleton-Instance-Objekt für die <see cref="T:Microsoft.SqlServer.Dac.KeyVault.DacKeyVaultService" />. 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAuthInfo">
      <MemberSignature Language="C#" Value="public void UpdateAuthInfo (Microsoft.SqlServer.Dac.KeyVault.KeyVaultAuthInfoBase authInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAuthInfo(class Microsoft.SqlServer.Dac.KeyVault.KeyVaultAuthInfoBase authInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dac.KeyVault.DacKeyVaultService.UpdateAuthInfo(Microsoft.SqlServer.Dac.KeyVault.KeyVaultAuthInfoBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authInfo" Type="Microsoft.SqlServer.Dac.KeyVault.KeyVaultAuthInfoBase" />
      </Parameters>
      <Docs>
        <param name="authInfo">
        </param>
        <summary>
            Übergibt eine <see cref="T:Microsoft.SqlServer.Dac.KeyVault.KeyVaultAuthInfoBase" /> -Objekt an die <see cref="T:Microsoft.SqlServer.Dac.KeyVault.KeyVaultAuthenticator" />, um Szenarien zu unterstützen, in denen ein Benutzer Authentifizierungsmethode, z. B. durch Anmeldung bei einem anderen Azure-Konto ändert,
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Dac.KeyVault.KeyVaultValidationResult Validate (System.Collections.Generic.IList&lt;string&gt; keyVaultUrls, System.Threading.CancellationToken cancelToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.SqlServer.Dac.KeyVault.KeyVaultValidationResult Validate(class System.Collections.Generic.IList`1&lt;string&gt; keyVaultUrls, valuetype System.Threading.CancellationToken cancelToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Dac.KeyVault.DacKeyVaultService.Validate(System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Dac.KeyVault.KeyVaultValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyVaultUrls" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="cancelToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keyVaultUrls">To be added.</param>
        <param name="cancelToken">To be added.</param>
        <summary>
            Rückruffunktion zur Überprüfung des Vorhandensein der AKV-Token für den Spaltenhauptschlüssel-Zugriff
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
